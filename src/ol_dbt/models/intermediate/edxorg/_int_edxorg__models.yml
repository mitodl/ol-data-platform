---
version: 2

models:
- name: int__edxorg__mitx_courseruns
  description: Intermediate model for MITx course runs on edx.org
  columns:
  - name: courserun_readable_id
    description: str, The canonical ID of the course run in the format as {org}/{course}/{run}
    tests:
    - unique
    - not_null
  - name: courserun_title
    description: str, The title of the course run on edx.org, maybe blank
  - name: courserun_url
    description: str, The url path of the course run
  - name: course_number
    description: str, unique string for the course. It can contain letters, numbers,
      or periods. e.g. 6.002.1x
  - name: course_readable_id
    description: str, Open edX ID for the course formatted as {org}/{course}
    tests:
    - not_null
  - name: courserun_semester
    description: str, The semester during which the course was launched e.g Fall 2020
  - name: courserun_enrollment_start_date
    description: date, registration open date for the course
  - name: courserun_start_date
    description: date, The date on which the course starts
  - name: courserun_end_date
    description: date, The date on which the course ends
  - name: courserun_is_self_paced
    description: boolean, Indicate whether or not the course is self paced
  - name: courserun_institution
    description: str, The institution that is linked to the course. Values are currently
  - name: courserun_instructors
    description: str, List of instructors associated with the course
  - name: micromasters_program_id
    description: int, foreign key to int__micromasters__programs
    tests:
    - relationships:
        to: ref('int__micromasters__programs')
        field: program_id
  - name: micromasters_course_id
    description: int, foreign key to int__micromasters__courses
    tests:
    - relationships:
        to: ref('stg__micromasters__app__postgres__courses_course')
        field: course_id

- name: int__edxorg__mitx_courserun_certificates
  description: Intermediate model for course run certificates for edx.org courses
    For edx.org DEDP courses, certificates are sourced from MicroMasters
  columns:
  - name: user_id
    description: int, Numerical user ID of a learner on edx.org
    tests:
    - not_null
    - relationships:
        to: ref('int__edxorg__mitx_users')
        field: user_id
  - name: courserun_readable_id
    description: str, The canonical ID of the course run in the format as {org}/{course}/{run}.
      This is old format and could be different from courses in MITxOnline or MicroMasters
      that use new format
    tests:
    - not_null
  - name: course_number
    description: str, unique string for the course. It can contain letters, numbers,
      or periods. e.g. 6.002.1x
  - name: user_username
    description: str, The username of the learner on edx.org
    tests:
    - not_null
  - name: user_mitxonline_username
    description: str, username on MITx Online
  - name: user_email
    description: str, The current email address of the learner on edx.org. Learners
      can update their emails on edx.org, so this is not necessary the same email
      as when learner earned certificate for the course.
    tests:
    - not_null
  - name: user_full_name
    description: str, The full name from user's profile on MicroMasters or edx.org
  - name: courseruncertificate_created_on
    description: timestamp, Timestamp indicating when the certificate was created
  - name: courseruncertificate_updated_on
    description: timestamp, Timestamp indicating the last time the certificate was
      modified
  - name: courseruncertificate_name
    description: str, The name of the user that is listed on the certificate
  - name: courseruncertificate_status
    description: str, Status of the generation of the certificate
  - name: courseruncertificate_download_url
    description: str, the full URL to the certificate
    tests:
    - not_null
  - name: courseruncertificate_download_uuid
    description: str, A hash code that identifies this studentâ€™s certificate. Included
      as part of the download_url.
    tests:
    - not_null
  - name: courseruncertificate_verify_uuid
    description: str, A hash code that verifies the validity of a certificate. Included
      on the certificate itself as part of a URL.
  - name: courseruncertificate_grade
    description: float, The grade when the certificate was generated
  - name: courseruncertificate_mode
    description: str, The enrollment mode associated with the certificate
  - name: courserun_title
    description: str, The title of the course run
  - name: micromasters_program_id
    description: int, foreign key to int__micromasters__programs
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_readable_id"]

- name: int__edxorg__mitx_courserun_enrollments
  description: Intermediate model for course run enrollments on edx.org
  columns:
  - name: user_id
    description: int, Numerical user ID of a learner on edx.org
    tests:
    - not_null
    - relationships:
        to: ref('int__edxorg__mitx_users')
        field: user_id
  - name: courserun_readable_id
    description: str, The canonical ID of the course run in the format as {org}/{course}/{run}.
      This is old format and could be different from courses in MITxOnline or MicroMasters
      that use new format
    tests:
    - not_null
  - name: courserun_start_on
    description: timestamp, date and time when the course starts
  - name: courserun_upgrade_deadline
    description: timestamp, specifying the date time beyond which users can not enroll
      in paid course mode
  - name: user_username
    description: str, username of a learner on the edX platform
    tests:
    - not_null
  - name: user_email
    description: str, The current email address of the learner on edx.org. Learners
      can update their emails on edx.org, so this is not necessary the same email
      as when learner enrolled for the course.
    tests:
    - not_null
  - name: user_full_name
    description: str, The full name of the user on edx.org. Very small number of edX.org
      users have blank full name, their names aren't populated unless they have their
      accounts linked on MicroMasters.
  - name: courserunenrollment_created_on
    description: timestamp, timestamp of user's enrollment in the course
  - name: courserunenrollment_enrollment_mode
    description: str, enrollment mode, e.g. honor, audit, verified. For edx.org DEDP
      courses, enrollments are verified in MicroMasters orders
  - name: courserunenrollment_is_active
    description: boolean, indicating if enrollment is active or not
  - name: courserun_title
    description: str, The title of the course run
  - name: course_number
    description: str, unique string for the course. It can contain letters, numbers,
      or periods. e.g. 6.002.1x
  - name: user_address_country
    description: string, country code for the user's address
  - name: user_mitxonline_username
    description: str, username on MITx Online if user's account is linked on MicroMasters
      portal
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_readable_id"]

- name: int__edxorg__mitx_users
  description: Intermediate User model for edx.org that contains the most recent user
    data
  columns:
  - name: user_id
    description: int, Numerical user ID on edx.org
    tests:
    - not_null
    - unique
  - name: user_username
    description: str, The unique username of the user on edx.org
    tests:
    - not_null
    - unique
  - name: user_email
    description: str, The current default email address of the learner on the edX
      platform. Not unique as some edxorg users found with same email for different
      username and user ID
    tests:
    - not_null
  - name: user_full_name
    description: str, The full name of the user on edx.org
  - name: user_country
    description: str, Country provided by the user on edx.org
  - name: user_city
    description: str, City selected the learner on their profile (Not currently used)
      History - Added in Jan 2014, not yet implemented.
  - name: user_mailing_address
    description: str, Mailing address provided by the learner on their profile
  - name: user_profile_goals
    description: str, The intended goals of the learner provided on their profile
  - name: user_highest_education
    description: str, user's Level of education- blank means User did not specify
      level of education. Null means this student signed up before this information
      was collected
    tests:
    - accepted_values:
        values: ["Doctorate", "Master''s or professional degree", "Bachelor''s degree",
          "Associate degree", "Secondary/high school", "Junior secondary/junior high/middle\
            \ school", "Elementary/primary school", "No formal education", "Other\
            \ education", "Doctorate in science or engineering", "Doctorate in another\
            \ field", ""]
  - name: user_birth_year
    description: int, A year of birth provided by the learner on their profile
  - name: user_profile_meta
    description: str, extra metadata on learner's profile. JSON data in text field
  - name: user_joined_on
    description: timestamp, timestamp that the user's account was created.
  - name: user_gender
    description: str, user's gender - blank means user did not specify a gender. Null
      means this student signed up before this information was collected
    tests:
    - accepted_values:
        values: ['Male', 'Female', 'Other/Prefer Not to Say', '', null]
  - name: user_last_login
    description: timestamp, Timestamp indicating the last time the user logged into
      the edX platform
  - name: user_mitxonline_username
    description: str, username on MITx Online if user's account is linked on MicroMasters
      portal
  - name: user_is_active
    description: boolean, indicating if user's account is active on edx.org. A user
      is inactive when their username or email is hashed.

- name: int__edxorg__mitx_courserun_grades
  description: Intermediate model for course run grades from edx.org
  columns:
  - name: user_id
    description: int, Numerical user ID of a learner on edx.org
    tests:
    - not_null
    - relationships:
        to: ref('int__edxorg__mitx_users')
        field: user_id
  - name: courserun_readable_id
    description: str, The canonical ID of the course run in the format as {org}/{course}/{run}.
    tests:
    - not_null
  - name: user_username
    description: str, The username of the learner on edx.org
    tests:
    - not_null
  - name: user_mitxonline_username
    description: str, username on MITx Online
  - name: user_email
    description: str, The current email address of the learner on edx.org. Learners
      can update their emails on edx.org, so this is not necessary the same email
      as when learner enrolled for the course.
    tests:
    - not_null
  - name: user_full_name
    description: str, The full name of the user on edx.org. Very small number of edX.org
      users have blank full name, their names aren't populated unless they have their
      accounts linked on MicroMasters.
  - name: courserungrade_passing_grade
    description: float, Passing grade for the course, (range between 0.0 to 1.0)
  - name: courserungrade_user_grade
    description: float, Final grade user earned in the course, (range between 0.0
      to 1.0)
    tests:
    - not_null
  - name: courserungrade_is_passing
    description: boolean, indicating that the user completed the course with a passing
      grade
    tests:
    - not_null
  - name: courserun_title
    description: str, The title of the course run
  - name: course_number
    description: str, unique string for the course. It can contain letters, numbers,
      or periods. e.g. 6.002.1x
  - name: micromasters_program_id
    description: int, foreign key to int__micromasters__programs
    tests:
    - relationships:
        to: ref('int__micromasters__programs')
        field: program_id
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_readable_id"]


- name: int__edxorg__mitx_user_courseactivities
  description: users' activities aggregated per course on edX.org
  columns:
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: courseactivity_num_events
    description: int, number of tracking log events
    tests:
    - not_null
  - name: courseactivity_num_days_activity
    description: int, number of days with activity
    tests:
    - not_null
  - name: courseactivity_first_event_timestamp
    description: timestamp, timestamp of user's first event within a course
    tests:
    - not_null
  - name: courseactivity_last_event_timestamp
    description: timestamp, timestamp of user's last event within a course
    tests:
    - not_null
  - name: courseactivity_num_play_video
    description: int, number of play_video events
  - name: courseactivity_num_unique_play_video
    description: int, number of unique videos played within a course
  - name: courseactivity_last_play_video_timestamp
    description: timestamp, timestamp of user's last play_video event within a course
  - name: courseactivity_last_problem_check_timestamp
    description: timestamp, timestamp of user's last problem_check event within a
      course
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_username", "courserun_readable_id"]

- name: int__edxorg__mitx_program_certificates
  description: learners who completed MicroMasters and XSeries programs on edX.org.
    program_certificate_awarded_on might be null for some programs such as SCM
  columns:
  - name: program_certificate_hashed_id
    description: str, unique hash value used to identify the program certificate
    tests:
    - not_null
    - unique
  - name: program_type
    description: str, the type of the program. The value are 'MicroMasters' and 'XSeries'
      for MITx programs on edX.org
    tests:
    - not_null
  - name: program_uuid
    description: str, the UUID of the program on edX.org. 'MIT Finance' and 'Finance'
      are two different UUIDs, as they have different required courses. 'Statistics
      and Data Science' is split into 'Statistics and Data Science' and 'Statistics
      and Data Science (General track)', which are also two different program UUIDs.
    tests:
    - not_null
  - name: program_title
    description: str, title of the program on edX.org.
    tests:
    - not_null
  - name: user_id
    description: int, the edX learner ID in the LMS in a user's course run enrollment
      record.
    tests:
    - not_null
  - name: user_username
    description: str, username of the user on edX.org
    tests:
    - not_null
  - name: user_full_name
    description: str, the full name of an edX learner in the LMS in a user's user
      profile record. Retired users will have no full name available.
    tests:
    - not_null
  - name: user_has_completed_program
    description: boolean, whether the learner has passed each of the courses in the
      program with a grade that qualifies them for a verified certificate.
    tests:
    - not_null
  - name: program_certificate_awarded_on
    description: timestamp, the date in ISO-8601 format that the learner has passed
      each of the courses in the program and was awarded a program certificate.
  - name: micromasters_program_id
    description: int, foreign key to program in the MicroMasters database
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "program_uuid"]

- name: int__edxorg__mitx_program_enrollments
  description: learners who enrolled in MicroMasters and XSeries programs on edX.org
  columns:
  - name: program_type
    description: str, the type of the program. The value are 'MicroMasters' and 'XSeries'
      for MITx programs on edX.org
    tests:
    - not_null
  - name: program_uuid
    description: str, the UUID of the program on edX.org. 'MIT Finance' and 'Finance'
      are two different UUIDs, as they have different required courses. 'Statistics
      and Data Science' is split into 'Statistics and Data Science' and 'Statistics
      and Data Science (General track)', which are also two different program UUIDs.
    tests:
    - not_null
  - name: program_title
    description: str, title of the program on edX.org.
    tests:
    - not_null
  - name: user_id
    description: int, the edX learner ID in the LMS in a user's course run enrollment
      record.
    tests:
    - not_null
  - name: user_username
    description: str, username of the user on edX.org
    tests:
    - not_null
  - name: user_full_name
    description: str, the full name of an edX learner in the LMS in a user's user
      profile record. Retired users will have no full name available.
    tests:
    - not_null
  - name: user_has_completed_program
    description: boolean, whether the learner has passed each of the courses in the
      program with a grade that qualifies them for a verified certificate.
  - name: micromasters_program_id
    description: int, foreign key to program in the MicroMasters database
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "program_uuid"]


- name: int__edxorg__mitx_user_courseactivity_problemcheck
  description: users' problem_check activities within a course on edX.org
  columns:
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: user_id
    description: int, the edX user ID extracted from context field. This id doesn't
      always match with the id in auth_user. There could be multiple user_ids for
      the same user_username. For those cases, use user_id from source table auth_user
      for that user_username.
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: useractivity_event_type
    description: str, problem_check - when a problem is successfully checked.
    tests:
    - not_null
  - name: useractivity_problem_id
    description: str, Unique ID for this problem in a course. It's recorded as a URL
      format - block-v1:{org)+{course ID}+type@problem+block@{hash code}
    tests:
    - not_null
  - name: useractivity_problem_name
    description: str, display name of this problem in a course
    tests:
    - not_null
  - name: useractivity_problem_attempts
    description: number, The number of times the user attempted to answer this problem
    tests:
    - not_null
  - name: useractivity_problem_student_answers
    description: json, student answers to this problem in problem_id and internal
      answer pair. For multiple questions, it lists every question and answer.
    tests:
    - not_null
  - name: useractivity_problem_success
    description: str, It's either 'correct' or 'incorrect'
    tests:
    - not_null
  - name: useractivity_problem_current_grade
    description: number, current grade value for this user
    tests:
    - not_null
  - name: useractivity_problem_max_grade
    description: number, Maximum possible grade value for this problem
    tests:
    - not_null
  - name: useractivity_timestamp
    description: timestamp, time when this event was emitted
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_username", "courserun_readable_id", "useractivity_problem_id",
        "useractivity_timestamp"]

- name: int__edxorg__mitx_user_courseactivity_problemsubmitted
  description: users' problem submission activities within a course on edX.org
  columns:
  - name: useractivity_event_id
    description: str, The unique identifier for tracing this problem submitted event
    tests:
    - not_null
    - unique
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: user_id
    description: int, the edX user ID extracted from context field. This id doesn't
      always match with the id in auth_user. There could be multiple user_ids for
      the same user_username. For those cases, use user_id from source table auth_user
      for that user_username.
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: useractivity_event_source
    description: str, specifies the source of the interaction that triggered the event.
      The value is server for this event.
    tests:
    - not_null
  - name: useractivity_event_type
    description: str, edx.grades.problem.submitted - when a problem is submitted and
      successfully saved
    tests:
    - not_null
  - name: useractivity_path
    description: str, relative url path of page that generated the problem submitted
      event.
  - name: useractivity_problem_id
    description: str, Unique ID for this problem in a course, formatted as block-v1:{org)+{course
      ID}+type@problem+block@{hash code}.
    tests:
    - not_null
  - name: useractivity_problem_name
    description: str, display name of this problem in a course
  - name: useractivity_problem_weight
    description: number, the weight of this problem
  - name: useractivity_problem_earned_score
    description: str, learnerâ€™s weighted score for this problem.
  - name: useractivity_problem_max_score
    description: number, weighted maximum possible score for this problem.
  - name: useractivity_timestamp
    description: timestamp, time when this event was emitted
    tests:
    - not_null

- name: int__edxorg__mitx_user_courseactivity_discussion
  description: users' discussion forum activities within a course on edX.org
  columns:
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: user_id
    description: int, the edX user ID extracted from context field. This id doesn't
      always match with the id in auth_user. There could be multiple user_ids for
      the same user_username. For those cases, use user_id from source table auth_user
      for that user_username.
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: useractivity_event_source
    description: str, specifies the source of the interaction that triggered the event.
      The value is server for the discussion events.
    tests:
    - not_null
  - name: useractivity_event_type
    description: >
      str, type of discussion forum event triggered. Values can be edx.forum.comment.created,
      edx.forum.comment.edited, edx.forum.response.created, edx.forum.response.voted,
      edx.forum.thread.created, edx.forum.thread.viewed, edx.forum.thread.voted, edx.forum.searched,
      etc.
      A list of discussion events can be found https://edx.readthedocs.io/projects/devdata/en/latest/
      internal_data_formats/tracking_logs/student_event_types.html#discussion-forum-events
    tests:
    - not_null
  - name: useractivity_path
    description: str, relative url path of page that generated this discussion event.
      e.g. for edx.forum.response.voted events, it indicates if this event is unvote
      or upvote
  - name: useractivity_discussion_post_id
    description: str, unique identifier for the discussion post learner engaged in.
      May be Null for edx.forum.searched event
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type != 'edx.forum.searched'"
  - name: useractivity_discussion_post_title
    description: str, title for the specific discussion post. May be Null for edx.forum.searched
      event.
  - name: useractivity_discussion_block_id
    description: str, identifier for the specific discussion component. e.g. discussion_ps2A-tab5.
      Value is the last part of 'coursestructure_block_id' string. May be Null for
      edx.forum.searched event.
  - name: useractivity_discussion_block_name
    description: str, display name for the specific discussion component. This value
      consists of the unit name and 'coursestructure_block_title' of this discussion
      component.
  - name: useractivity_discussion_page_url
    description: str, URL of the page from which the discussion thread can be viewed.
  - name: useractivity_discussion_search_query
    description: str, the query text searched by the learner on the course discussion
      page. Applicable for edx.forum.searched event.
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type = 'edx.forum.searched'"
  - name: useractivity_discussion_roles
    description: >
      array, Identifies a user who doesn't have discussion management privileges
      as a 'Student', or a user who has discussion management privileges as a course
      'Community TA', 'Moderator', or 'Administrator'.
      The value of role refers to name field in django_comment_client_role_users.
      https://edx.readthedocs.io/projects/devdata/en/latest/internal_data_formats/sql_schema.html#id12
  - name: useractivity_timestamp
    description: timestamp, time when this event was emitted
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_username", "courserun_readable_id", "useractivity_event_type",
        "useractivity_discussion_post_id", "useractivity_timestamp"]


- name: int__edxorg__mitx_user_courseactivity_video
  description: users' discussion forum activities within a course on edX.org
  columns:
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: user_id
    description: int, the edX user ID extracted from context field. This id doesn't
      always match with the id in auth_user. There could be multiple user_ids for
      the same user_username. For those cases, use user_id from source table auth_user
      for that user_username.
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: useractivity_event_source
    description: str, specifies the source of the interaction that triggered the event.
      The value can only be browser for video event as MITx Online doesn't have a
      mobile app at this time.
    tests:
    - not_null
  - name: useractivity_event_type
    description: >
      str, type of video event triggered. e.g. play_video, pause_video, stop_video,
      complete_video, etc.
      A list of video events can be found https://edx.readthedocs.io/projects/devdata/en/latest/
      internal_data_formats/tracking_logs/student_event_types.html#video-interaction-events
    tests:
    - not_null
  - name: useractivity_page_url
    description: str, url of the page the user was visiting when the event was emitted.
  - name: useractivity_video_id
    description: str, hash code for the video being watched. This value is the last
      part of coursestructure_block_id string
    tests:
    - not_null
  - name: useractivity_video_duration
    description: number, The length of the video file, in seconds.
  - name: useractivity_video_currenttime
    description: number, The time in the video when this event was emitted. May be
      Null for load_video or seek_video events.
  - name: useractivity_video_old_time
    description: number, time in the video, in seconds, at which the user chose to
      go to a different point in time for seek_video event
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type = 'seek_video'"
  - name: useractivity_video_new_time
    description: number, time in the video, in seconds, that the user selected as
      the destination point for seek_video event
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type = 'seek_video'"
  - name: useractivity_video_new_speed
    description: number, new speed that the user selected for the video to play for
      speed_change_video event. e.g. 0.75, 1.0, 1.25, 1.50.
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type = 'speed_change_video'"
  - name: useractivity_video_old_speed
    description: number, old speed at which the video was playing for speed_change_video
      event.
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "useractivity_event_type = 'speed_change_video'"
  - name: useractivity_timestamp
    description: timestamp, time when this event was emitted
    tests:
    - not_null

- name: int__edxorg__mitx_user_courseactivities_daily
  description: users' activities aggregated per course and per daily on edX.org
  columns:
  - name: user_username
    description: str, username of the edX.org user
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, open edX Course ID formatted as course-v1:{org}+{course}+{run}
      for course runs since Fall 2014, {org}/{course number}/{run} for older runs
    tests:
    - not_null
  - name: courseactivity_num_events
    description: int, number of tracking log events (including all course activities)
    tests:
    - not_null
  - name: courseactivity_date
    description: date, date that user has any kind of activities in the course
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_username", "courserun_readable_id", "courseactivity_date"]
