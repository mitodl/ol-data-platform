---
version: 2

models:
- name: int__mitxpro__courserunenrollments
  description: Intermediate model of enrollments in xPro
  columns:
  - name: courserunenrollment_id
    description: id for enrollment
    tests:
    - not_null
    - unique
    - dbt_expectations.expect_column_to_exist
  - name: courserunenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the run
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: user_id
    description: int, unique ID for each user on the xPro platform
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserun_id
    description: int, unique ID specifying a "run" of an xPro course
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserunenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserunenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed. Options
      are 'deferred', 'transferred', 'refunded', 'enrolled', 'unenrolled'
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ['deferred', 'transferred', 'refunded', 'enrolled', 'unenrolled',
          '', null]
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, name chosen by user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, user email associated with their account
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: ecommerce_order_id
    description: int, id of order associated with the payment for the enrollment
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 11
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_courserunenrollment')
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id", "ecommerce_order_id"]

- name: int__mitxpro__programenrollments
  description: Intermediate model of enrollments in xPro.
  columns:
  - name: programenrollment_id
    description: id for enrollment
    tests:
    - not_null
    - unique
    - dbt_expectations.expect_column_to_exist
  - name: programenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the program
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: user_id
    description: int, unique ID for each user on the xPro platform
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: program_id
    description: int, unique ID specifying a "run" of an xPro course
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed. Options
      are 'deferred', 'transferred', 'refunded', 'enrolled', 'unenrolled'
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ['deferred', 'transferred', 'refunded', 'enrolled', 'unenrolled',
          '', null]
  - name: program_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, name chosen by user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, user email associated with their account
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: ecommerce_order_id
    description: int, id of order associated with the payment for the enrollment
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 11
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_programenrollment')
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "program_id", "ecommerce_order_id"]

- name: int__mitxpro__programs
  description: Intermediate model of programs in MITxPro
  columns:
  - name: program_id
    description: int, primary key representing a single MITxPro program
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_is_live
    description: boolean, indicating whether the program is available to users on
      MITxPro website
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_readable_id
    description: str, Open edX ID formatted as program-v1:{org}+{program code} e.g.
      program-v1:xPRO+MLx
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 4

- name: int__mitxpro__program_runs
  description: Intermediate model of program runs in MITxPro
  columns:
  - name: programrun_id
    description: int, primary key representing a single MITxPro program run
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_id
    description: int, foreign key to courses_program representing a single MITxPro
      program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: programrun_readable_id
    description: str, unique program run ID formatted as program-v1:{org}+{program
      code}+{run_tag} e.g. program-v1:xPRO+MLx+R1
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: programrun_tag
    description: str, string that identifies a single run in a program e.g. R0
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: programrun_start_on
    description: timestamp, specifying when the program run begins
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programrun_end_on
    description: timestamp, specifying when the program run ends
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_programrun')

- name: int__mitxpro__courses
  description: Intermediate model of courses in MITxPro
  columns:
  - name: course_id
    description: int, primary key representing a single MITxPro course
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_id
    description: id, foreign key to courses_program
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: course_is_live
    description: boolean, indicating whether the course is available to users on MITxPro
      website
  - name: course_title
    description: str, title of the course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_readable_id
    description: str, Open edX ID formatted as course-v1:{org}+{course code} e.g.
      course-v1:xPRO+MLx2
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5

- name: int__mitxpro__course_runs
  description: Intermediate model of course runs in MIT xPro.
  columns:
  - name: courserun_id
    description: int, primary key representing a single MITxPro course run
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to courses_course representing a single MITxPro
      course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_is_live
    description: boolean, indicating whether the course run is available to users
      on MITxPro website
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_tag
    description: str, string that identifies a single run in a course e.g. R0
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_readable_id
    description: str, Open edX Course ID formatted as course-v1:{org}+{course code}+{run_tag}
      e.g. course-v1:xPRO+MLx1+R0
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_url
    description: str, url location for the course run on MITxPro website
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_start_on
    description: timestamp, specifying when the course begins
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_end_on
    description: timestamp, specifying when the course ends
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_enrollment_start_on
    description: timestamp, specifying when enrollment starts
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_enrollment_end_on
    description: timestamp, specifying when enrollment ends
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 11

- name: int__mitxpro__course_to_topics
  description: Intermediate model for MITxPro course to topics
  columns:
  - name: coursetopic_name
    description: str, name of a course topic
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 2
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["coursetopic_name", "course_id"]
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_course_to_topic')

- name: int__mitxpro__users
  description: Intermediate model of users in MIT xPro.
  columns:
  - name: user_id
    description: int, unique id assigned to the user
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: string, username
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_full_name
    description: string, full name
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: string, email
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_joined_on
    description: timestamp, user join timestamp
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_last_login
    description: timestamp, user last log in
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_address_country
    description: string, country code for the user's address
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_is_active
    description: boolean, indicating if user is active or not
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__users_user')

- name: int__mitxpro__courserun_grades
  description: Intermediate model for mitxpro course run grades
  columns:
  - name: courserungrade_id
    description: int, primary key representing a single MIT xPro grade record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__course_runs')
        field: courserun_id
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_readable_id
    description: str, Open edX Course ID formatted as course-v1:{org}+{course code}+{run_tag}
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_url
    description: str, url location for the course run in MIT xPro
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__courses')
        field: course_id
  - name: courserungrade_grade
    description: float, user's grade for the course (range between 0.0 to 1.0)
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_letter_grade
    description: str, letter grade defined in the edX grading policy (value may be
      'A', 'B', 'C', 'D', 'Pass', none)
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_is_passing
    description: boolean, indicating whether the user has passed the minimum passing
      score set for this course
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__users')
        field: user_id
  - name: user_username
    description: str, username
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, email
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_courserungrade')

- name: int__mitxpro__courserun_certificates
  columns:
  - name: courseruncertificate_id
    description: int, primary key representing a single MIT xPro course certificate
      record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__course_runs')
        field: courserun_id
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__courses')
        field: course_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__users')
        field: user_id
  - name: courseruncertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_readable_id
    description: str, Open edX Course ID formatted as course-v1:{org}+{course code}+{run_tag}
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_url
    description: str, url location for the course run in MIT xPro
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, username
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, email
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_courseruncertificate')

- name: int__mitxpro__program_certificates
  columns:
  - name: programcertificate_id
    description: int, primary key representing a single MIT xPro program certificate
      record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: programcertificate_uuid
    description: str, unique identifier for the program certificate
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_id
    description: int, foreign key to courses_program representing a single program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__programs')
        field: program_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('int__mitxpro__users')
        field: user_id
  - name: programcertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_readable_id
    description: str, Open edX ID formatted as program-v1:{org}+{program code}
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, username
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, email
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__mitxpro__app__postgres__courses_programcertificate')
