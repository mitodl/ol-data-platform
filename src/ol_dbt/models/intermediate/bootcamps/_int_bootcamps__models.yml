---
version: 2

models:
- name: int__bootcamps__courserunenrollments
  description: Intermediate model for enrollments in bootcamps
  columns:
  - name: courserunenrollment_id
    description: id for enrollment
    tests:
    - not_null
    - unique
    - dbt_expectations.expect_column_to_exist
  - name: courserunenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the run
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: user_id
    description: int, unique ID for each user on the bootcamps platform
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserun_id
    description: int, unique ID specifying a "run" of a bootcamp
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserunenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courserunenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed. Options
      are 'deferred', 'refunded'
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ['deferred', 'refunded', null]
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, name chosen by user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, user email associated with their account
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 9
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__courserunenrollment')
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]

- name: int__bootcamps__courses
  description: Intermediate model for Bootcamps courses
  columns:
  - name: course_id
    description: int, primary key representing a single bootcamp course
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_title
    description: str, title of the bootcamp course
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 2

- name: int__bootcamps__course_runs
  description: Intermediate model for Bootcamps course runs
  columns:
  - name: courserun_id
    description: int, primary key representing a single bootcamp course run
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to int__bootcamps__courses representing a single
      bootcamp course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_title
    description: str, title of the bootcamp course run
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_readable_id
    description: str, unique string to identify a bootcamp course run (could be blank
      for older runs)
    tests:
    - unique
    - dbt_expectations.expect_column_to_exist
  - name: courserun_start_on
    description: timestamp, specifying when the course run begins
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_end_on
    description: timestamp, specifying when the course run ends
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 6

- name: int__bootcamps__users
  description: denormalized bootcamps users
  columns:
  - name: user_id
    description: int, primary key
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: string, username
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_full_name
    description: string, full name
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: string, email
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_joined_on
    description: timestamp, user join timestamp
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_last_login
    description: timestamp, user last log in
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_address_country
    description: string, country code for the user's address
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__users_user')
      compare_row_condition: "user_is_active = true"
