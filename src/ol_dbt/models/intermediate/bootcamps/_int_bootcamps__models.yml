---
version: 2

models:
- name: int__bootcamps__ecommerce_wiretransferreceipt
  description: Data about a wire transfer used to pay for an order
  columns:
  - name: wiretransferreceipt_id
    description: int, primary key representing a wire transfer receipt
    tests:
    - not_null
    - unique
  - name: wiretransferreceipt_created_on
    description: timestamp, specifying when the wire transfer receipt was initially
      created
    tests:
    - not_null
  - name: wiretransferreceipt_updated_on
    description: timestamp, specifying when the wire transfer receipt was most recently
      updated
    tests:
    - not_null
  - name: wiretransferreceipt_data
    description: json, wire transfer data for a payment
    tests:
    - not_null
  - name: order_id
    description: int, primary key in ecommerce_order
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__ecommerce_wiretransferreceipt')

- name: int__bootcamps__ecommerce_receipt
  description: Data returned from cybersource when a user pays for an order with cybersource
  columns:
  - name: receipt_id
    description: int, primary key representing a receipt
    tests:
    - not_null
    - unique
  - name: receipt_created_on
    description: timestamp, specifying when the receipt was initially created
    tests:
    - not_null
  - name: receipt_updated_on
    description: timestamp, specifying when the receipt was most recently updated
    tests:
    - not_null
  - name: receipt_data
    description: json, cybersource data for a payment
    tests:
    - not_null
  - name: order_id
    description: int, primary key in ecommerce_order
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__ecommerce_receipt')

- name: int__bootcamps__ecommerce_order
  columns:
  - name: order_id
    description: int, primary key representing a single bootcamps order
    tests:
    - unique
    - not_null
  - name: order_created_on
    description: timestamp, specifying when the order was initially created
    tests:
    - not_null
  - name: order_updated_on
    description: timestamp, specifying when the order was most recently updated
    tests:
    - not_null
  - name: order_state
    description: string, order state. Options are "fulfilled", "failed", "created",
      "refunded"
    tests:
    - not_null
    - accepted_values:
        values: ['fulfilled', 'failed', 'created', 'refunded']
  - name: order_total_price_paid
    description: number, total order amount
    tests:
    - not_null
  - name: order_purchaser_user_id
    description: int, primary key in auth_user for the purchaser
    tests:
    - not_null
  - name: order_payment_type
    description: string, payment type for the order. One of "cybersource", "wiretransfer",
      "refund"
    tests:
    - not_null
  - name: application_id
    description: int, primary key in applications_bootcampapplication for the application
      the order is associated with
  - name: line_id
    description: int, primary key representing an ecommerce line
    tests:
    - unique
    - not_null
  - name: line_description
    description: string, description of the purchased bootcamp run
    tests:
    - not_null
  - name: courserun_id
    description: int, foreign key in courses_courserun of the purchased run
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__ecommerce_order')
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__ecommerce_line')

- name: int__bootcamps__courserunenrollments
  description: Intermediate model for enrollments in bootcamps
  columns:
  - name: courserunenrollment_id
    description: id for enrollment
    tests:
    - not_null
    - unique
  - name: courserunenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the run
    tests:
    - not_null
  - name: user_id
    description: int, unique ID for each user on the bootcamps platform
    tests:
    - not_null
  - name: courserun_id
    description: int, unique ID specifying a "run" of a bootcamp
    tests:
    - not_null
  - name: courserunenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
    tests:
    - not_null
  - name: courserunenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed. Options
      are 'deferred', 'refunded'
    tests:
    - accepted_values:
        values: ['deferred', 'refunded', null]
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, unique string to identify a bootcamp course run (could be blank
      for older runs)
  - name: user_username
    description: str, name chosen by user
    tests:
    - not_null
  - name: user_email
    description: str, user email associated with their account
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__courserunenrollment')
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]

- name: int__bootcamps__courses
  description: Intermediate model for Bootcamps courses
  columns:
  - name: course_id
    description: int, primary key representing a single bootcamp course
    tests:
    - unique
    - not_null
  - name: course_title
    description: str, title of the bootcamp course

- name: int__bootcamps__course_runs
  description: Intermediate model for Bootcamps course runs
  columns:
  - name: courserun_id
    description: int, primary key representing a single bootcamp course run
    tests:
    - unique
    - not_null
  - name: course_id
    description: int, foreign key to int__bootcamps__courses representing a single
      bootcamp course
    tests:
    - not_null
  - name: courserun_title
    description: str, title of the bootcamp course run
  - name: courserun_readable_id
    description: str, unique string to identify a bootcamp course run (could be blank
      for older runs)
    tests:
    - unique
  - name: courserun_start_on
    description: timestamp, specifying when the course run begins
  - name: courserun_end_on
    description: timestamp, specifying when the course run ends

- name: int__bootcamps__users
  description: denormalized bootcamps users
  columns:
  - name: user_id
    description: int, primary key
    tests:
    - unique
    - not_null
  - name: user_username
    description: string, username
    tests:
    - unique
    - not_null
  - name: user_full_name
    description: string, full name
  - name: user_email
    description: string, email
    tests:
    - not_null
  - name: user_joined_on
    description: timestamp, user join timestamp
  - name: user_last_login
    description: timestamp, user last log in
  - name: user_address_country
    description: string, country code for the user's address
  - name: user_is_active
    description: boolean, indicating if user is active or not
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__auth_user')

- name: int__bootcamps__courserun_certificates
  columns:
  - name: courseruncertificate_id
    description: int, primary key representing a single Bootcamps course certificate
      record
    tests:
    - unique
    - not_null
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate
    tests:
    - unique
    - not_null
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - relationships:
        to: ref('int__bootcamps__course_runs')
        field: courserun_id
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - relationships:
        to: ref('int__bootcamps__courses')
        field: course_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - relationships:
        to: ref('int__bootcamps__users')
        field: user_id
  - name: courseruncertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
  - name: courserun_title
    description: str, title of the course run
  - name: courserun_readable_id
    description: str, unique string to identify a bootcamp course run
  - name: user_username
    description: string, username
    tests:
    - not_null
  - name: user_email
    description: string, email
    tests:
    - not_null
  - name: courseruncertificate_created_on
    description: timestamp, specifying when a certificate was initially created
  - name: courseruncertificate_updated_on
    description: timestamp, specifying when a certificate was most recently updated
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__bootcamps__app__postgres__courses_courseruncertificate')
