---
version: 2

models:
- name: int__micromasters__dedp_proctored_exam_grades
  description: DEDP proctored exam grades stored in MicroMasters database. We haven't
    had any new data for this table since 2022-09.
  columns:
  - name: program_title
    description: str, title of the MicroMasters program
    tests:
    - not_null
  - name: micromasters_program_id
    description: int, id of the program in the micromasters database
  - name: mitxonline_program_id
    description: int, id of the program in the mitxonline database
  - name: course_title
    description: str, title of the course, for example Data Analysis for Social Scientists
  - name: course_number
    description: str, course number, for example 14.73x or JPAL102x
  - name: examrun_readable_id
    description: str, edX exam run ID formatted as course-v1:{org}+{exam code}+{semester},
      e.g., course-v1:MITxT+14.100PEx+2T2022. May be null for exam runs before 2022.
  - name: user_edxorg_username
    description: str, username on edX.org
  - name: user_mitxonline_username
    description: str, username on MITx Online
  - name: user_full_name
    description: str, user full name on micromasters
  - name: user_micromasters_email
    description: str, current user email on micromasters
    tests:
    - not_null
  - name: user_mitxonline_email
    description: str, current user email on mitxonline
  - name: proctoredexamgrade_score
    description: float, user score for the proctored exam, range between 0 to 100
    tests:
    - not_null
  - name: proctoredexamgrade_is_passing
    description: boolean, indicating whether the user has passed the passing score
      set for this proctored exam
    tests:
    - not_null
  - name: proctoredexamgrade_passing_score
    description: float, passing score for the proctored exam, range between 0 to 100
  - name: proctoredexamgrade_percentage_grade
    description: float, user percentage grade for the proctored exam, range between
      0 to 1
    tests:
    - not_null
  - name: proctoredexamgrade_exam_on
    description: timestamp, date and time the learner took the exam
    tests:
    - not_null
  - name: proctoredexamgrade_created_on
    description: timestamp, date and time when this grade was initially created
    tests:
    - not_null
  - name: proctoredexamgrade_updated_on
    description: timestamp, date and time when this grade was most recently updated
    tests:
    - not_null
  - name: proctoredexamgrade_id
    description: int, sequential ID representing a DEDP proctored exam grade in MicroMasters
      database
    tests:
    - not_null
    - unique
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_micromasters_email", "examrun_readable_id"]

- name: int__micromasters__course_enrollments
  description: MicroMasters enrollments. Enrollments in courses that satisfy the requirements
    for multiple programs appear in multiple rows.
  columns:
  - name: program_title
    description: str, title of micromasters program the course is part of
    tests:
    - not_null
  - name: micromasters_program_id
    description: int, id of the program in the micromasters database
  - name: mitxonline_program_id
    description: int, id of the program in the mitxonline database
  - name: user_id
    description: str, either the edx.org or the mitxonline id for the user
    tests:
    - not_null
  - name: user_mitxonline_username
    description: str, mitxonline username for the user
  - name: user_edxorg_username
    description: str, edxorg username for the user
  - name: user_address_country
    description: str, country code for the user's address
  - name: user_email
    description: str, user email
    tests:
    - not_null
  - name: user_full_name
    description: str, user full name on edX.org or MITxOnline. Very small number of
      edX.org users have blank full name, their names aren't populated unless they
      have their accounts linked on MicroMasters.
  - name: courserun_readable_id
    description: str, course ID on edx.org or openedx
    tests:
    - not_null
  - name: platform
    description: str, the platform of the course. Either 'MITx Online' or 'edX.org'
    tests:
    - not_null
  - name: courserunenrollment_created_on
    description: timestamp, timestamp of user's enrollment in the course
  - name: courserunenrollment_is_active
    description: boolean, whether the enrollment is active
    tests:
    - not_null
  - name: courserun_title
    description: str, title of the course
    tests:
    - not_null
  - name: course_number
    description: str, unique string for the course e.g. 14.009x
    tests:
    - not_null
  - name: courserunenrollment_enrollment_mode
    description: str, enrollment mode for MITx courses. May be different from the
      enrollment mode form the edxorg database if the user paid through micromasters
    tests:
    - not_null
  - name: program_is_dedp
    description: boolean, specifying if the program is DEDP from the mixonline program
      id
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "platform", "courserun_readable_id", "micromasters_program_id",
        "mitxonline_program_id"]

- name: int__micromasters__programs
  description: Intermediate model for programs in MicroMasters
  columns:
  - name: program_id
    description: int, sequential ID representing a program in MicroMasters
    tests:
    - not_null
    - unique
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
  - name: program_description
    description: str, description of the program
  - name: program_num_required_courses
    description: int, indicating the number of required courses to earn certificate
    tests:
    - not_null
  - name: program_is_live
    description: boolean, indicating whether program is available to users on MicroMasters
      website
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__micromasters__app__postgres__courses_program')
- name: int__micromasters__program_requirements
  description: Intermediate model for program requirements in MicroMasters
  columns:
  - name: program_id
    description: int, foreign key to courses_program
    tests:
    - relationships:
        to: ref('stg__micromasters__app__postgres__courses_program')
        field: program_id
  - name: course_id
    description: int, foreign key to courses_course
    tests:
    - relationships:
        to: ref('stg__micromasters__app__postgres__courses_course')
        field: course_id
  - name: electiveset_id
    description: int, sequential ID representing a elective requirement set for a
      program in MicroMasters
  - name: electiveset_required_number
    description: int, indicating the number of required from elective courses
  - name: programrequirement_type
    description: str, indicating the courses is either core or elective
    tests:
    - not_null
    - accepted_values:
        values: ["Core", "Elective"]
  - name: program_num_required_courses
    description: int, indicating the number of required courses to earn certificate
    tests:
    - not_null
- name: int__micromasters__program_certificates
  description: MicroMasters program certificate earners
  columns:
  - name: user_edxorg_username
    description: str, The username of the learner on the edX platform. For users who
      got DEDP certificates on MITx Online, this could be blank if they don't have
      their edxorg account linked on MicroMasters.
  - name: user_mitxonline_username
    description: str, username on MITx Online
  - name: user_email
    description: str, The email address of the learner on the edX platform
    tests:
    - not_null
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
  - name: micromasters_program_id
    description: int, sequential ID representing a program in MicroMasters
  - name: mitxonline_program_id
    description: int, sequential ID representing a program in the mitxonline database
  - name: user_edxorg_id
    description: int, Numerical user ID of a learner on the edX platform
  - name: program_certificate_hashed_id
    description: str, unique hash value used to identify the program certificate
    tests:
    - unique
    - not_null
  - name: program_completion_timestamp
    description: timestamp, timestamp of the course certificate that completed the
      program
  - name: user_gender
    description: str, user's gender from user's profile on MITx Online or edX.org.
      blank means user did not specify a gender. Null means this student signed up
      before this information was collected
    tests:
    - accepted_values:
        values: '{{ var("gender_values") }}'
  - name: user_address_city
    description: str, city where user lives in from user's profile on MicroMasters.
      Note that this data isn't available on MITx Online.
  - name: user_first_name
    description: str, first name from user's profile on MITx Online or MicroMasters.
  - name: user_last_name
    description: str, last name from user's profile on MITx Online or MicroMasters.
  - name: user_full_name
    description: str, The full name from user's profile on MITx Online or MicroMasters.
  - name: user_year_of_birth
    description: str, user's birth year from user's profile on MITx Online or MicroMasters.
  - name: user_country
    description: str, Country from user's profile on MITx Online or MicroMasters
  - name: user_address_postal_code
    description: str, postal code where user lives in from the profile on MicroMasters.
      Note that this data isn't available on MITx Online.
  - name: user_street_address
    description: str, street address where user lives in from user's profile on MicroMasters.
      Note that this data isn't available on MITx Online.
  - name: user_address_state_or_territory
    description: str,  state or territory where user lives in from user's profile
      on MITx Online or MicroMasters.
  - name: program_is_dedp
    description: boolean, specifying if the program is DEDP from the mixonline program
      id
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_email", "micromasters_program_id", "mitxonline_program_id"]

- name: int__micromasters__course_certificates
  description: course certificates earned for MicroMasters programs. This include
    certificates are downloadable and not revoked from MITx Online, MicroMaster and
    edX.org. Certificates earned for courses that satisfy the requirements for multiple
    programs appear in multiple rows for each program
  columns:
  - name: program_title
    description: str, title of the program the course is part of
    tests:
    - not_null
  - name: micromasters_program_id
    description: int, id of the program the course is part of in the micromasters
      database
  - name: mitxonline_program_id
    description: int, id of the program the course is part of in the mitxonline database
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, course run ID on edX.org or MITxOnline
    tests:
    - not_null
  - name: courserun_platform
    description: str, indicating the platform where this course runs on. It's either
      mitxonline or edxorg.
    tests:
    - not_null
  - name: course_number
    description: str, unique string for the course e.g. 14.009x
    tests:
    - not_null
  - name: user_edxorg_username
    description: str, username on edX.org
  - name: user_mitxonline_username
    description: str, username on MITxOnline
  - name: user_email
    description: str, user email on edX.org or MITxOnline
    tests:
    - not_null
  - name: user_full_name
    description: str, user full name on edX.org or MITxOnline
  - name: user_country
    description: str, user country on edX.org or MITxOnline
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate on MITx Online, MicroMasters
      or edX.org
  - name: courseruncertificate_url
    description: str, the full URL to the course certificate on mitxonline.mit.edu,
      micromasters.mit.edu (legacy) or edX.org
  - name: courseruncertificate_created_on
    description: timestamp, date and time when this course certificate was initially
      created
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_email", "courserun_readable_id", "micromasters_program_id",
        "mitxonline_program_id"]

- name: int__micromasters__course_grades
  description: course grades for MicroMasters programs. Grades for courses that satisfy
    the requirements for multiple programs appear in multiple rows
  columns:
  - name: program_title
    description: str, title of program the course is part of
    tests:
    - not_null
  - name: micromasters_program_id
    description: int, id of the program the course is part of in the micromasters
      database
  - name: mitxonline_program_id
    description: int, id of the program the course is part of in the mitxonline database
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, course run ID on edX.org or MITxOnline
    tests:
    - not_null
  - name: courserun_platform
    description: str, indicating the platform where this course runs on. It's either
      mitxonline or edxorg.
    tests:
    - not_null
  - name: course_number
    description: str, unique string for the course e.g. 14.009x
    tests:
    - not_null
  - name: user_edxorg_username
    description: str, username on edX.org
  - name: user_mitxonline_username
    description: str, username on MITxOnline
  - name: user_email
    description: str, user email on edX.org or MITxOnline.
    tests:
    - not_null
  - name: user_full_name
    description: str, user full name on edX.org or MITxOnline
  - name: user_country
    description: str, user country on edX.org or MITxOnline
  - name: grade
    description: float, course grade on edX.org or MITxOnline range from 0 to 1, maybe
      blank on edX.org
  - name: is_passing
    description: boolean, indicating whether the user has passed the passing score
      set for this course on edX.org or MITxOnline
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_email", "courserun_readable_id", "micromasters_program_id",
        "mitxonline_program_id"]

- name: int__micromasters__users
  description: MicroMasters users
  columns:
  - name: user_id
    description: int, sequential ID representing a user in MicroMasters
    tests:
    - unique
    - not_null
  - name: user_profile_id
    description: int, foreign key to profiles_profile
    tests:
    - unique
    - not_null
  - name: user_username
    description: str, unique string to identify user in MicroMasters
    tests:
    - unique
    - not_null
  - name: user_mitxonline_username
    description: str, username in MITx Online
  - name: user_edxorg_username
    description: str, username in edX.org. For the very small number of users with
      multiple edx usernames, this is the username with the latest logins
  - name: user_email
    description: str, user email associated with user account (not unique)
    tests:
    - not_null
  - name: user_joined_on
    description: timestamp, specifying when a user account was initially created
  - name: user_last_login
    description: timestamp, specifying when a user last logged in
  - name: user_is_active
    description: boolean, indicating if user is active or not
  - name: user_preferred_language
    description: str, user's preferred language
  - name: user_mailing_address
    description: str, user's mailing address on edx.org
  - name: user_bio
    description: str, user's biography on edx.org
  - name: user_about_me
    description: str, about me in user profile
  - name: user_edx_name
    description: str, user's full name on edx.org
  - name: user_edx_goals
    description: str, user's personal goal on edx.org
  - name: user_full_name
    description: str, user's full name
  - name: user_first_name
    description: str, first name on user profile
  - name: user_last_name
    description: str, last name on user profile
  - name: user_preferred_name
    description: str, user's Nickname / Preferred name
  - name: user_nationality
    description: str, user's nationality (stored as country code)
  - name: user_birth_country
    description: str, country code where user was born pulling from MicroMasters profile.
  - name: user_address_country
    description: str, country code where user lives in
  - name: user_address_city
    description: str, city where user lives in
  - name: user_address_state_or_territory
    description: str,  state or territory where user lives in
  - name: user_address_postal_code
    description: str, postal code where user lives in
  - name: user_street_address
    description: str, street address where user lives in
  - name: user_gender
    description: str, user gender (could be blank)
    tests:
    - accepted_values:
        values: ['Male', 'Female', 'Other/Prefer Not to Say']
  - name: user_birth_date
    description: timestamp, user's date of birth
  - name: user_phone_number
    description: str, user's phone number
  - name: user_highest_education
    description: str, user highest education pulled from users education history in
      MicroMasters database or level of education reported on edx if former doesn't
      exist
    tests:
    - accepted_values:
        values: ["Doctorate", "Master''s or professional degree", "Bachelor''s degree",
          "Associate degree", "Secondary/high school", "Junior secondary/junior high/middle\
            \ school", "Elementary/primary school", "No formal education", "Other\
            \ education", "Doctorate in science or engineering", "Doctorate in another\
            \ field"]
  - name: user_company_name
    description: str, this is the most recent company this user works for, pulled
      from users employment history in MicroMasters database
  - name: user_job_position
    description: str, user's job title in the most recent employment, pulled from
      users employment history in MicroMasters database
  - name: user_company_industry
    description: str, industry of the most recent company this user works for, pulled
      from users employment history in MicroMasters database
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('__micromasters__users')

- name: int__micromasters__orders
  columns:
  - name: order_id
    description: int, primary key representing a single  order
    tests:
    - unique
    - not_null
  - name: order_created_on
    description: timestamp, specifying when the order was initially created
    tests:
    - not_null
  - name: order_state
    description: string, order state. Options are "fulfilled", "failed", "created"
      "refunded", "partially_refunded"
    tests:
    - not_null
  - name: order_total_price_paid
    description: number, total order amount
    tests:
    - not_null
  - name: user_id
    description: int, primary key in users_user for the purchaser
    tests:
    - not_null
  - name: order_reference_number
    description: string, readable id for the order
    tests:
    - unique
  - name: line_price
    description: numeric, list price for the order line
    tests:
    - not_null
  - name: courserun_readable_id
    description: string, courserun_readable_id from courses_courserun
    tests:
    - not_null
  - name: courserun_edxorg_readable_id
    description: str, courserun_readable_id formatted as {org}/{course code}/{run_tag}
      to match course in edxorg
  - name: receipt_transaction_id
    description: str, transaction identifier from most recent cybersource payment
      for the order
  - name: receipt_payment_method
    description: str, payment method from most recent cybersource payment for the
      order
  - name: receipt_authorization_code
    description: str, authorization code from most recent cybersource payment for
      the order
  - name: receipt_reference_number
    description: str, req_reference_number from cybersource payment
  - name: receipt_bill_to_address_state
    description: str, address state from most recent cybersource payment for the order
  - name: receipt_bill_to_address_country
    description: str, address country from most recent cybersource payment for the
      order
  - name: coupon_discount_amount_text
    description: str, discount amount in readable format. It can be fixed discount
      which is $<dollar amount> off, fixed-price which is $<dollar amount> or percent-discount
      which is <percentage> % off
  - name: discount_amount
    description: numeric, actual discount dollar amount. For percent-discount coupon,
      this is calculated as line_price * percentage off
  - name: coupon_type
    description: str, type of the coupon which describes what circumstances the coupon
      can be redeemed. Possible values are "standard" or "discounted-previous-course".
  - name: coupon_code
    description: str, coupon code for the redeemed coupon
  - name: redeemedcoupon_created_on
    description: timestamp, specifying when the coupon was redeemed for the order
  tests:
  - dbt_expectations.expect_table_row_count_to_equal_other_table:
      compare_model: ref('stg__micromasters__app__postgres__ecommerce_order')
- name: int__micromasters__program_enrollments
  description: MicroMasters program enrolled users
  columns:
  - name: user_edxorg_username
    description: str, The username of the learner on the edX platform. For users who
      got DEDP certificates on MITx Online, this could be blank if they don't have
      their edxorg account linked on MicroMasters.
  - name: user_mitxonline_username
    description: str, username on MITx Online
  - name: user_email
    description: str, The email address of the learner in MITxOnline if we have them
      there for DEDP programs. Otherwise we pull the email address from MicroMasters/edx.org.
  - name: micromasters_program_id
    description: int, sequential ID representing a program in MicroMasters
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
  - name: mitxonline_program_id
    description: int, sequential ID representing a program in the mitxonline database
  - name: user_edxorg_id
    description: int, Numerical user ID of a learner on the edX platform
  - name: user_gender
    description: str, The users gender from their profile in MITxOnline if we have
      them there for DEDP programs. Otherwise we pull the gender from MicroMasters/edx.org.
      blank means user did not specify a gender. Null means this student signed up
      before this information was collected
    tests:
    - accepted_values:
        values: '{{ var("gender_values") }}'
  - name: user_country
    description: str, Country from user's profile on MITx Online or MicroMasters
  - name: user_address_city
    description: str, city where user lives in from user's profile on MicroMasters.
      Note that this data isn't available on MITx Online.
  - name: user_first_name
    description: str, first name from user's profile on MITx Online or MicroMasters.
  - name: user_last_name
    description: str, last name from user's profile on MITx Online or MicroMasters.
  - name: user_address_postal_code
    description: str, postal code where user lives in from the profile on MicroMasters.
  - name: user_street_address
    description: str, street address where user lives in from user's profile on MicroMasters.
      Note that this data isn't available on MITx Online.
  - name: user_address_state_or_territory
    description: str,  state or territory where user lives in from user's profile
      on MITx Online or MicroMasters.
  - name: user_full_name
    description: str, The full name from user's profile on MITx Online or MicroMasters.
  - name: micromasters_user_id
    description: int, sequential ID representing a user in MicroMasters
  - name: user_year_of_birth
    description: str, user's birth year from user's profile on MITx Online or MicroMasters.
  - name: platform_name
    description: str, a field indicating if the data is pulled from MITx Online or
      edx.org.
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_edxorg_username", "program_title", "user_email"]
