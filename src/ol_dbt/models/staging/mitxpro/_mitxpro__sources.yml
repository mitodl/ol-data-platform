---
version: 2

sources:
- name: ol_warehouse_raw_data
  loader: airbyte
  database: 'ol_data_lake_{{ target.name }}'
  schema: 'ol_warehouse_{{ target.name }}_raw'
  tables:
  - name: raw__xpro__app__postgres__ecommerce_orderaudit
    columns:
    - name: id
      description: int, primary key representing a change to the orders table
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the order audit was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the order audit was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: data_before
      description: json, jsonified order object before the change
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: data_after
      description: json, jsonified order object after the change
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: acting_user_id
      description: int, reference to users_user table, the user who made the change
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: order_id
      description: int, reference to ecommerce_order
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 7
  - name: raw__xpro__app__postgres__ecommerce_courserunselection
    description: The course runs the user selected for the basket items in their basket.
      If the basket item is a course run, there is one ecommerce_courserunselection
      record. If the basket item  is a program, there will be a record for each course
      run from the program that is selected by the user. Once the user completes the
      purchase, these records become records in ecommerce_linerunselection
    columns:
    - name: id
      description: int, primary key representing a basket course run selection
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the basket course run selection was
        initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the basket course run selection was
        most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: run_id
      description: int, primary key in courses_courserun
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: basket_id
      description: int, primary key in ecommerce_basket
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 5
  - name: raw__xpro__app__postgres__ecommerce_basketitem
    description: The ecommerce_products that the user has in their basket but has
      not purchased yet
    columns:
    - name: id
      description: int, primary key representing a item in a user's basket
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the basket item was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the basket item was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: quantity
      description: int, quantitiy of the item. Always 1
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: basket_id
      description: int, foreign key referencing ecommerce_basket
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: product_id
      description: int, foreign key referencing ecommerce_product
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_run_id
      description: int, foreign key referencing courses_programrun, present if the
        product is a program
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 7
  - name: raw__xpro__app__postgres__ecommerce_basket
    columns:
    - name: id
      description: int, primary key representing a user basket
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the basket was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the basket was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: int, foreign key to the users_user table
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 4
  - name: raw__xpro__app__postgres__ecommerce_receipt
    description: Data returned from cybersource when a user pays for an order
    columns:
    - name: id
      description: int, primary key representing a receipt
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the receipt was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the receipt most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: data
      description: json, cybersource data for a payment
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: order_id
      description: int, primary key in ecommerce_order
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 5
  - name: raw__xpro__app__postgres__ecommerce_programrunline
    description: The program run the user selected when purchsing a program.
    columns:
    - name: id
      description: int, primary key representing a line program run selection
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the line program run selection was initially
        created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the line program run selection was most
        recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_run_id
      description: int, primary key in courses_programrun
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: line_id
      description: int, primary key in ecommerce_line
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 5
  - name: raw__xpro__app__postgres__ecommerce_linerunselection
    description: The course runs the user selected when purchsing the courseware object.
      If the courseware object is a course run, there is one ecommerce_line_run_selection
      record. If the courseware object is a program, there will be a record for each
      course run from the program that is selected by the user
    columns:
    - name: id
      description: int, primary key representing a line run selection
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the line run selection was initially
        created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the line run selection was most recently
        updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: run_id
      description: int, primary key in courses_courserun
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: line_id
      description: int, primary key in ecommerce_line
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 5
  - name: raw__xpro__app__postgres__django_content_type
    columns:
    - name: id
      description: int, sequential ID for the django model
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: model
      description: string, the name of the django model
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: app_label
      description: string, the  functional group the model belongs to
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 3
  - name: raw__xpro__app__postgres__ecommerce_product
    columns:
    - name: id
      description: int, primary key representing an ecommerce product
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the product was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the product was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: content_type_id
      description: int, primary key in django_contenttype of the courseware. It is
        the key for courses_courserun or courses_program in production. There is a
        record where the courseware is courses_course on rc
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: object_id
      description: int, primary key in either courses_courserun or courses_program
        table of the courseware
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_active
      description: boolean, whether or not the product is currently purchasable
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: visible_in_bulk_form
      description: boolean, whether or not the product is purchasable through the
        bulk form at /ecommerce/bulk
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 7
  - name: raw__xpro__app__postgres__ecommerce_productversion
    columns:
    - name: id
      description: int, primary key representing an ecommerce product version
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the product version was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the product version was most recently
        updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: price
      description: numeric, the product price for this version
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: description
      description: string, product version discriptiom
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: product_id
      description: int, primary key in ecommerce_product
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: text_id
      description: string, the readable_id field from the product object
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: requires_enrollment_code
      description: boolean, true if the learner is required to enter an enrollment
        code to enroll in the course or program at the checkout
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 8
  - name: raw__xpro__app__postgres__ecommerce_line
    columns:
    - name: id
      description: int, primary key representing an ecommerce line
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the line was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the line was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: quantity
      description: int, quantitiy ordered, currently always 1
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: order_id
      description: int, foreign key in the orders_order table for the order that contains
        the line
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: product_version_id
      description: int stored as string, foreign key in the ecommerce_productversion
        table. Versioned product
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 6
  - name: raw__xpro__app__postgres__ecommerce_order
    columns:
    - name: id
      description: int, primary key representing a single xpro order
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the order was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the order was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: status
      description: string, order state. Options are "fulfilled", "failed", "created"
        "refunded"
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: total_price_paid
      description: number, total order amount
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: purchaser_id
      description: int, primary key in users_user for the purchaser
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 6
  - name: raw__xpro__app__postgres__courses_courserunenrollment
    columns:
    - name: id
      description: int, sequential ID tracking a single user enrollment
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when an enrollment was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when an enrollment was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: change_status
      description: str, enrollment status for users whose enrollment is no longer
        active. Options are 'deferred', 'transferred', 'refunded', 'unenrolled'
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: active
      description: boolean, indicating whether the user is still enrolled in the run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: edx_enrolled
      description: boolean, indicating whether the user is enrolled on edx
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: run_id
      description: int, unique ID specifying a "run" of an xPro course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: int, unique ID for each user on the xPro platform
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: order_id
      description: int, id of order associated with the payment for the enrollment
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: company_id
      description: int, id of the company associated with the payment for the enrollment
        for enrollments that are made through bulk purchases by companies
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 10
  - name: raw__xpro__app__postgres__courses_programenrollment
    columns:
    - name: id
      description: int, sequential ID tracking a single user enrollment
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when an enrollment was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when an enrollment was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: change_status
      description: str, enrollment status for users whose enrollment is no longer
        active. Options are 'deferred', 'transferred', 'refunded', 'unenrolled'
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: active
      description: boolean, indicating whether the user is still enrolled in the program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_id
      description: int, foreign key from the courses_program table
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: int, unique ID for each user on the xPro platform
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: order_id
      description: int, id of order associated with the payment for the enrollment
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: company_id
      description: int, id of the company associated with the payment for the enrollment
        for enrollments that are made through bulk purchases by companies
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 9
  - name: raw__xpro__app__postgres__courses_program
    columns:
    - name: id
      description: int, primary key representing a single MITxPro program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: live
      description: boolean, indicating whether the program is available to users on
        MITxPro website
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: title
      description: str, title of the program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: readable_id
      description: str, Open edX ID formatted as program-v1:{org}+{program code} e.g.
        program-v1:xPRO+MLx
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a program was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a program was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 6

  - name: raw__xpro__app__postgres__courses_programrun
    columns:
    - name: id
      description: int, primary key representing a single MITxPro program run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_id
      description: int, foreign key to courses_program representing a single MITxPro
        program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: run_tag
      description: str, string that identifies a single run for a program e.g. R0
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: start_date
      description: timestamp, specifying when the program run begins
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: end_date
      description: timestamp, specifying when the program run ends
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the program run was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the program run was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 7

  - name: raw__xpro__app__postgres__courses_course
    description: Source table for MITxPro courses
    columns:
    - name: id
      description: int, primary key representing a single MITxPro course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: live
      description: boolean, indicating whether the course is available to users on
        MITxPro website
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: title
      description: str, title of the course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_id
      description: id, foreign key to courses_program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: readable_id
      description: str, Open edX ID formatted as course-v1:{org}+{course code} e.g.
        course-v1:xPRO+MLx2
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: position_in_program
      description: int, sequential number indicating the course display order in a
        program on MITxPro website
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a course was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a course was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 8

  - name: raw__xpro__app__postgres__courses_courserun
    description: Source table for MITxPro course runs
    columns:
    - name: id
      description: int, primary key representing a single MITxPro course run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: live
      description: boolean, indicating whether the course run is available to users
        on MITxPro website
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: title
      description: str, title of the course run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: run_tag
      description: str,string that identifies a single run for a course e.g. R0
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: course_id
      description: int, foreign key to courses_course representing a single MITxPro
        course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: courseware_id
      description: str, Open edX Course ID formatted as course-v1:{org}+{course code}+{run_tag}
        e.g. course-v1:xPRO+MLx1+R0
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: courseware_url_path
      description: str, url location for the course run on MITxPro website
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: start_date
      description: timestamp, specifying when the course begins
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: end_date
      description: timestamp, specifying when the course ends
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: enrollment_start
      description: timestamp, specifying when enrollment starts
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: enrollment_end
      description: timestamp, specifying when enrollment ends
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: expiration_date
      description: timestamp, specifying the date time beyond which users should not
        see link to this course run on their dashboard
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a course run was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a course run was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 14

  - name: raw__xpro__app__postgres__courses_courserungrade
    columns:
    - name: id
      description: int, primary key representing a single MIT xPro grade record
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: course_run_id
      description: int, foreign key to courses_courserun representing a single course
        run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: str, foreign key to users_user representing a single user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: grade
      description: float, user's grade for the course (range between 0.0 to 1.0)
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: letter_grade
      description: str, letter grade defined ib edX grading policy (value may be 'A',
        'B', 'C', 'D', 'Pass', none)
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: set_by_admin
      description: boolean, indicating whether this grade is set by a staff user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: passed
      description: boolean, indicating whether the user has passed the minimum passing
        score set for this course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a grade was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a grade was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 9

  - name: raw__xpro__app__postgres__courses_courseruncertificate
    columns:
    - name: id
      description: int, primary key representing a single MIT xPro course certificate
        record
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: uuid
      description: str, unique identifier for the certificate
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: course_run_id
      description: int, foreign key to courses_courserun representing a single course
        run
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: str, foreign key to users_user representing a single user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: certificate_page_revision_id
      description: int, foreign key to wagtailcore_pagerevision (could be blank)
    - name: created_on
      description: timestamp, specifying when a certificate was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a certificate was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_revoked
      description: boolean, indicating whether the certificate is revoked and invalid
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 8

  - name: raw__xpro__app__postgres__courses_programcertificate
    columns:
    - name: id
      description: int, primary key representing a single MIT xPro program certificate
        record
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: uuid
      description: str, unique identifier for the program certificate
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: program_id
      description: int, foreign key to courses_program representing a single program
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: str, foreign key to users_user representing a single user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: certificate_page_revision_id
      description: int, foreign key to wagtailcore_pagerevision (could be blank)
    - name: created_on
      description: timestamp, specifying when a certificate was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a certificate was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_revoked
      description: boolean, indicating whether the certificate is revoked and invalid
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 8

  - name: raw__xpro__app__postgres__courses_coursetopic
    columns:
    - name: id
      description: int, primary key representing a single MITxPro course topic
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: name
      description: str, name of a course topic
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a course topic was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a course topic was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 4

  - name: raw__xpro__app__postgres__courses_course_topics
    columns:
    - name: id
      description: int, primary key representing a single MITxPro course tagged to
        a topic
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: course_id
      description: int, foreign key to courses_course representing a single course
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: coursetopic_id
      description: int, foreign key to courses_coursetopic representing a single course
        topic
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 3

  - name: raw__xpro__app__postgres__users_user
    columns:
    - name: id
      description: int, sequential ID representing one user in xPro
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: password
      description: str, hashed password
    - name: username
      description: str, name chosen by user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: email
      description: str, user email associated with their account
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: name
      description: str, the user's full name
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_active
      description: boolean, used to soft delete users
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when a user account was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when a user account was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: last_login
      description: timestamp, user's last login
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_staff
      description: boolean, used for app permissions
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: is_superuser
      description: boolean, used for app permissions
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 11
  - name: raw__xpro__app__postgres__users_legaladdress
    columns:
    - name: id
      description: int, primary key for table
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: country
      description: string, user country code
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: int, foreign key to users_user
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: last_name
      description: string, user last name
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, when the record was created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: first_name
      description: string, user first name
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, when the record was updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: street_address_1
      description: string, first line of street address
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: street_address_2
      description: string, second line of street address
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: street_address_3
      description: string, third line of street address
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: street_address_4
      description: string, fourth line of street address
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: street_address_5
      description: string, fifth line of street address
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: city
      description: string, city
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: state_or_territory
      description: string, state or territory
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: postal_code
      description: string, postal code
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 15
  - name: raw__xpro__app__postgres__users_profile
    columns:
    - name: id
      description: int, sequential ID
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: created_on
      description: timestamp, specifying when the row was initially created
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: updated_on
      description: timestamp, specifying when the row was most recently updated
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: gender
      description: str, one of  "m", "f" or "o" to encode "Male" , "Female", "Other/Prefer
        not to say". May be blank
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: birth_year
      description: int, user birth year
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: company
      description: str, user company
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: job_title
      description: str, user job title
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: industry
      description: str, user job industry
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: job_function
      description: str, user job function
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: company_size
      description: int, encodes company size choices are 1 - "Small/Start-up (1+ employees)",
        9 - "Small/Home office (1-9 employees)", 99 - "Small (10-99 employees)", 999
        - "Small to medium-sized (100-999 employees)", 9999 - "Medium-sized (1000-9999
        employees)", 10000 - "Large Enterprise (10,000+ employees)", 0 - "Other (N/A
        or Don't know)" may be null
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: years_experience
      description: int, encodes user years experience choices are; 2 - "Less than
        2 years", 5 - "2-5 years", 10 - "6 - 10 years", 15 - "11 - 15 years", 20 -
        "16 - 20 years", 21 - "More than 20 years", 0 - "Prefer not to say", may be
        null
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: leadership_level
      description: str, user leadership level
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: user_id
      description: int, unique ID for each user on the xPro platform
      tests:
      - dbt_expectations.expect_column_to_exist
    - name: highest_education
      description: str, choices are "Doctorate", "Master's or professional degree",
        "Bachelor's degree", "Associate degree", "Secondary/high school", "Junior
        secondary/junior high/middle school", "Elementary/primary school", "No formal
        education", "Other education"
      tests:
      - dbt_expectations.expect_column_to_exist
    tests:
    - dbt_expectations.expect_table_column_count_to_equal:
        value: 14
