---
version: 2

models:
- name: stg__bootcamps__app__postgres__ecommerce_wiretransferreceipt
  description: Data about a wire transfer
  columns:
  - name: wiretransferreceipt_id
    description: int, primary key representing a  wire transfer receipt
    tests:
    - unique
    - not_null
  - name: wiretransferreceipt_created_on
    description: timestamp, specifying when the wire transfer receipt was initially
      created
    tests:
    - not_null
  - name: wiretransferreceipt_updated_on
    description: timestamp, specifying when the wire transfer receipt was most recently
      updated
    tests:
    - not_null
  - name: wiretransferreceipt_data
    description: json, data for a payment
    tests:
    - not_null
  - name: order_id
    description: int, primary key in ecommerce_order
  - name: wiretransferreceipt_import_id
    description: int, unique id used to identify the wire transfer in the spreadsheet
      we use to import wire transfer data
    tests:
    - not_null

- name: stg__bootcamps__app__postgres__ecommerce_receipt
  description: Data returned from cybersource when a user pays for an order through
    cybersource
  columns:
  - name: receipt_id
    description: int, primary key representing a receipt
    tests:
    - not_null
    - unique
  - name: receipt_created_on
    description: timestamp, specifying when the receipt was initially created
    tests:
    - not_null
  - name: receipt_updated_on
    description: timestamp, specifying when the receipt was most recently updated
    tests:
    - not_null
  - name: receipt_data
    description: json, cybersource data for a payment
    tests:
    - not_null
  - name: order_id
    description: int, primary key in ecommerce_order

- name: stg__bootcamps__app__postgres__ecommerce_line
  columns:
  - name: line_id
    description: int, primary key representing an ecommerce line
    tests:
    - unique
    - not_null
  - name: line_created_on
    description: timestamp, specifying when the line was initially created
    tests:
    - not_null
  - name: line_updated_on
    description: timestamp, specifying when the line was most recently updated
    tests:
    - not_null
  - name: line_price
    description: numeric, price paid for the bootcamp run
  - name: line_description
    description: string, description of the purchased bootcamp run
    tests:
    - not_null
  - name: order_id
    description: int, foreign key for the order this line belongs to
    tests:
    - not_null
    - unique
  - name: courserun_id
    description: int, foreign key in courses_courserun of the purchased run
    tests:
    - not_null

- name: stg__bootcamps__app__postgres__ecommerce_orderaudit
  columns:
  - name: orderaudit_id
    description: int, primary key representing a change to the orders table
    tests:
    - unique
    - not_null
  - name: orderaudit_created_on
    description: timestamp, specifying when the order audit was initially created
    tests:
    - not_null
  - name: orderaudit_updated_on
    description: timestamp, specifying when the order audit was most recently updated
    tests:
    - not_null
  - name: orderaudit_data_before
    description: json, jsonified order object before the change
  - name: orderaudit_data_after
    description: json, jsonified order object after the change
  - name: orderaudit_acting_user_id
    description: int, reference to users_user table, the user who made the change
  - name: order_id
    description: int, reference to ecommerce_order

- name: stg__bootcamps__app__postgres__ecommerce_order
  columns:
  - name: order_id
    description: int, primary key representing a single bootcamps order
    tests:
    - unique
    - not_null
  - name: order_created_on
    description: timestamp, specifying when the order was initially created
    tests:
    - not_null
  - name: order_updated_on
    description: timestamp, specifying when the order was most recently updated
    tests:
    - not_null
  - name: order_state
    description: string, order state. Options are "fulfilled", "failed", "created",
      "refunded"
    tests:
    - not_null
    - accepted_values:
        values: ['fulfilled', 'failed', 'created', 'refunded']
  - name: order_total_price_paid
    description: number, total order amount
    tests:
    - not_null
  - name: order_purchaser_user_id
    description: int, primary key in auth_user for the purchaser
    tests:
    - not_null
  - name: order_payment_type
    description: string, payment type for the order. One of "cybersource", "wiretransfer",
      "refund"
    tests:
    - not_null
  - name: application_id
    description: int, primary key in applications_bootcampapplication for the application
      the order is associated with

- name: stg__bootcamps__app__postgres__courserunenrollment
  columns:
  - name: courserunenrollment_id
    description: int, sequential ID tracking a single user enrollment
    tests:
    - unique
    - not_null
  - name: courserunenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
    tests:
    - not_null
  - name: courserunenrollment_updated_on
    description: timestamp, specifying when an enrollment was most recently updated
    tests:
    - not_null
  - name: courserunenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed. Options
      are 'deferred', 'refunded'
    tests:
    - accepted_values:
        values: ['deferred', 'refunded', null]
  - name: courserunenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the run
    tests:
    - not_null
  - name: courserun_id
    description: int, unique ID specifying a "run" of a bootcamp
    tests:
    - not_null
  - name: user_id
    description: int, unique ID for each user on the bootcamp platform
    tests:
    - not_null
  - name: courserunenrollment_novoed_sync_on
    description: timestamp, last time the enrollment was synced with novoed
  - name: courserunenrollment_is_certificate_blocked
    description: boolean, indicates that new cretificates shouldn't be created for
      the enrollment
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]
- name: stg__bootcamps__app__postgres__auth_user
  columns:
  - name: user_id
    description: int, sequential ID representing one user in bootcamps
    tests:
    - unique
    - not_null
  - name: user_username
    description: str, name chosen by user
    tests:
    - unique
    - not_null
  - name: user_email
    description: str, user email associated with user account. Not unique
    tests:
    - not_null
  - name: user_is_active
    description: boolean, used to soft delete user accounts
  - name: user_joined_on
    description: timestamp, specifying when a user account was initially created
  - name: user_last_login
    description: timestamp, specifying when a user last logged in

- name: stg__bootcamps__app__postgres__profiles_legaladdress
  columns:
  - name: user_address_id
    description: int, sequential ID
    tests:
    - unique
    - not_null
  - name: user_address_country
    description: string, user country code
    tests:
    - not_null
  - name: user_id
    description: int, foreign key to users_user
    tests:
    - unique
    - not_null
  - name: user_last_name
    description: string, user last name
    tests:
    - not_null
  - name: user_first_name
    description: string, user first name
    tests:
    - not_null
  - name: user_street_address
    description: string, user street address
    tests:
    - not_null
  - name: user_address_city
    description: string, user city
    tests:
    - not_null
  - name: user_address_state_or_territory
    description: string, user state or territory
    tests:
    - not_null
  - name: user_address_postal_code
    description: string, user postal code
    tests:
    - not_null

- name: stg__bootcamps__app__postgres__profiles_profile
  columns:
  - name: user_profile_id
    description: int, sequential ID
    tests:
    - unique
    - not_null
  - name: user_full_name
    description: str, the user's full name
    tests:
    - not_null
  - name: user_gender
    description: str, user gender
    tests:
    - accepted_values:
        values: ['Male', 'Female', 'Other/Prefer Not to Say', '']
    - not_null
  - name: user_birth_year
    description: int, user birth year
  - name: user_company
    description: str, user company
    tests:
    - not_null
  - name: user_job_title
    description: str, user job title
    tests:
    - not_null
  - name: user_industry
    description: str, user job industry
    tests:
    - not_null
  - name: user_job_function
    description: str, user job function
    tests:
    - not_null
  - name: user_company_size
    description: str, company size
    tests:
    - accepted_values:
        values: ['Small/Start-up (1+ employees)', 'Small/Home office (1-9 employees)',
          'Small (10-99 employees)', 'Small to medium-sized (100-999 employees)',
          'Medium-sized (1000-9999 employees)', 'Large Enterprise (10,000+ employees)',
          "Other (N/A or Don''t know)"]
  - name: user_years_experience
    description: str, years experience
    tests:
    - accepted_values:
        values: ['Less than 2 years', '2-5 years', '6 - 10 years', '11 - 15 years',
          '16 - 20 years', 'More than 20 years', 'Prefer not to say']
  - name: user_id
    description: int, unique ID for each user on the bootcamp platform
    tests:
    - unique
    - not_null
  - name: user_highest_education
    description: str, user highest education
    tests:
    - accepted_values:
        values: '{{ var("highest_education_values") }}'
    - not_null

- name: stg__bootcamps__app__postgres__courses_course
  description: staging model for Bootcamps courses
  columns:
  - name: course_id
    description: int, primary key representing a single bootcamp course
    tests:
    - unique
    - not_null
  - name: course_title
    description: str, title of the bootcamp course

- name: stg__bootcamps__app__postgres__courses_courserun
  description: staging model for Bootcamps course runs
  columns:
  - name: courserun_id
    description: int, primary key representing a single bootcamp course run
    tests:
    - unique
    - not_null
  - name: course_id
    description: int, foreign key to courses_course representing a single bootcamp
      course
    tests:
    - not_null
  - name: courserun_title
    description: str, title of the bootcamp course run
  - name: courserun_readable_id
    description: str, unique string to identify a bootcamp course run (could be blank
      for older runs)
    tests:
    - unique
  - name: courserun_start_on
    description: timestamp, specifying when the course run begins
  - name: courserun_end_on
    description: timestamp, specifying when the course run ends

- name: stg__bootcamps__app__postgres__courses_courseruncertificate
  columns:
  - name: courseruncertificate_id
    description: int, primary key representing a single Bootcamps course certificate
      record
    tests:
    - unique
    - not_null
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate
    tests:
    - unique
    - not_null
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - relationships:
        to: ref('stg__bootcamps__app__postgres__courses_courserun')
        field: courserun_id
  - name: user_id
    description: str, foreign key to auth_user representing a single user
    tests:
    - not_null
    - relationships:
        to: ref('stg__bootcamps__app__postgres__auth_user')
        field: user_id
  - name: courseruncertificate_url
    description: str, the full URL to the certificate on Bootcamps if it's not invoked
    tests:
    - unique
    - not_null
  - name: courseruncertificate_created_on
    description: timestamp, specifying when a certificate was initially created
  - name: courseruncertificate_updated_on
    description: timestamp, specifying when a certificate was most recently updated
  - name: courseruncertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]
