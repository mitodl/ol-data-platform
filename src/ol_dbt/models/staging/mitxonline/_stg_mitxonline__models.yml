---
version: 2

models:
- name: stg__mitxonline__app__postgres__ecommerce_basketdiscount
  columns:
  - name: basketdiscount_id
    description: int, primary key representing a discount in a user's basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketdiscount_created_on
    description: timestamp, specifying when the basket discount was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketdiscount_updated_on
    description: timestamp, specifying when the basket discount was most recently
      updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketdiscount_applied_on
    description: timestamp, specifying when the discount was applied to the basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basket_id
    description: int, foreign key referencing ecommerce_basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: int, foreign key referencing users_user
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_id
    description: int, foreign key referencing ecommerce_discount
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
- name: stg__mitxonline__app__postgres__ecommerce_basketitem
  columns:
  - name: basketitem_id
    description: int, primary key representing a item in a user's basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketitem_created_on
    description: timestamp, specifying when the basket item was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketitem_updated_on
    description: timestamp, specifying when the basket item was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basketitem_quantity
    description: int, quantitiy of the item. Always 1
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basket_id
    description: int, foreign key referencing ecommerce_basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: product_id
    description: int, foreign key referencing ecommerce_product
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 6
- name: stg__mitxonline__app__postgres__ecommerce_basket
  description: Checkout basket that contains courseware that a users wants to purchase
    but has not purchased yet
  columns:
  - name: basket_id
    description: int, primary key representing a user basket
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basket_created_on
    description: timestamp, specifying when the basket was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: basket_updated_on
    description: timestamp, specifying when the basket was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: int, foreign key to the users_user table
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 4
- name: stg__mitxonline__app__postgres__flexiblepricing_flexiblepriceapplication
  description: An application for an income based discount.
  columns:
  - name: flexiblepriceapplication_id
    description: int, primary key representing a flexible pricing application
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: flexiblepriceapplication_created_on
    description: timestamp, specifying when the table row was created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepriceapplication_updated_on
    description: timestamp, specifying when the table row was updated
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepriceapplication_status
    description: string, status of the application. One of "approved", "auto-approved",
      "created", "pending-manual-approval", "denied", "reset"
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - accepted_values:
        values: ["approved", "auto-approved", "created", "pending-manual-approval",
          "denied", "reset"]
  - name: flexiblepriceapplication_income_usd
    description: numeric, user income in usd
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_original_income
    description: numeric, user income in it's original currency
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_original_currency
    description: string, currency code of orginal income
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_country_of_income
    description: string, country code for user country of income
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_exchange_rate_timestamp
    description: timestamp, timestamp of exchange rate used to convert the original
      income to usd
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_date_documents_sent
    description: date, date that the user sent documents that prove their income
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_justification
    description: string, explanation for flexible pricing application approval or
      rejection
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: flexiblepriceapplication_country_of_residence
    description: string, country code for user country of residece
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: user_id
    description: int, primary key in the users_user table of the user  requesting
      flexible pricing
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepriceapplication_cms_submission_id
    description: int, primary key of the cms submission stored in the flexiblepricing_flexiblepricingrequestsubmission
      table
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: contenttype_id
    description: int, primary key in django_contenttype of either courses_course or
      courses_program
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courseware_object_id
    description: int, primary key in either the courses_course or courses_program
      table of the courseware the user applied for flexible pricing for
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepricetier_id
    description: int, primary key in flexiblepricing_flexiblepricetier of the price
      tier the user applied for
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 17
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["courseware_object_id", "contenttype_id", "user_id"]
- name: stg__mitxonline__app__postgres__flexiblepricing_flexiblepricetier
  columns:
  - name: flexiblepricetier_id
    description: int, primary key representing a flexible pricing tier
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: flexiblepricetier_created_on
    description: timestamp, specifying when the table row was created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepricetier_updated_on
    description: timestamp, specifying when the table row was updated
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: contenttype_id
    description: int, foreign key in django_contenttype for either course or program
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: courseware_object_id
    description: int, id for the courseware object in either the courses_course or
      courses_program table
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepricetier_is_current
    description: boolean, whether the flexible pricing tier is currently enabled
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: flexiblepricetier_income_threshold_usd
    description: numeric, maximum income in usd to qualify for the flexible price
      tier
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discount_id
    description: int, id of ecommerce_discount associated with the flexible price
      tier
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
- name: stg__mitxonline__app__postgres__flexiblepricing_currencyexchangerate
  columns:
  - name: currencyexchangerate_id
    description: int, primary key representing a country exchange rate
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: currencyexchangerate_created_on
    description: timestamp, specifying when the table row was created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: currencyexchangerate_updated_on
    description: timestamp, specifying when the table row was updated
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: currencyexchangerate_currency_code
    description: string, currency code
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: currencyexchangerate_exchange_rate
    description: numeric, exchange rate to usd
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: currencyexchangerate_description
    description: string, readable currency name
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 6
- name: stg__mitxonline__app__postgres__flexiblepricing_countryincomethreshold
  columns:
  - name: countryincomethreshold_id
    description: int, primary key representing a country income threshold
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: countryincomethreshold_created_on
    description: timestamp, specifying when the table row was created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: countryincomethreshold_updated_on
    description: timestamp, specifying when the table row was updated
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: countryincomethreshold_country_code
    description: string, country code
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: countryincomethreshold_income_threshold
    description: int, usd income threshold to quantity for flexible pricing
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__ecommerce_userdiscount
  description: This table is used to pre-apply a discount when a user checks out
  columns:
  - name: userdiscount_id
    description: int, primary key representing a discount user combo
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: userdiscount_created_on
    description: timestamp, specifying when the discount user association was initially
      created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: userdiscount_updated_on
    description: timestamp, specifying when the discount user association was initially
      created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discount_id
    description: int, foreign key for ecommerce_discount
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: user_id
    description: int, foreign key for users_user
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__ecommerce_discountproduct
  description: This table is used to limit dicounts to a specific product. Discounts
    which do not have a record in this table are redeemable for all products
  columns:
  - name: discountproduct_id
    description: int, primary key representing a discount product combo
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discountproduct_created_on
    description: timestamp, specifying when the discount product association was initially
      created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discountproduct_updated_on
    description: timestamp, specifying when the discount product association was last
      updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_id
    description: int, foreign key for ecommerce_discount
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_id
    description: int, foreign key for ecommerce_product
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__ecommerce_discount
  columns:
  - name: discount_id
    description: int, primary key representing a discount
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: discount_created_on
    description: timestamp, specifying when the discount was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_updated_on
    description: timestamp, specifying when the discount was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_amount
    description: numeric, discount amount. May be a precent or dollar amount
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discount_type
    description: string, one of  "percent-off", "dollars-off" and "fixed-price". Specifys
      if the ammount of the discount refers to a percent of, a dollar amount off or
      a discounted price
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - accepted_values:
        values: ["percent-off", "dollars-off", "fixed-price"]
  - name: discount_redemption_type
    description: string, one of  "one-time",  "one-time-per-user" and "unlimited"
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - accepted_values:
        values: ["one-time", "one-time-per-user", "unlimited"]
  - name: discount_max_redemptions
    description: int, maximum times a coupon can be redeemed
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_code
    description: string, discount code
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discount_is_for_flexible_pricing
    description: boolean, whether the discount was created for income based flexible
      pricing
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: discount_activated_on
    description: timestamp, specifying when the discount is activated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_expires_on
    description: timestamp, specifying when the discount is deactivated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 11
- name: stg__mitxonline__app__postgres__ecommerce_discountredemption
  columns:
  - name: discountredemption_id
    description: int, primary key representing a discount redemption
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discountredemption_timestamp
    description: timestamp, specifying when the discount was redeemed by the user
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: int, foreign key for users_user
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: discount_id
    description: int, foreign key for ecommerce_discount
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: order_id
    description: int, foreign key for ecommerce_orders
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__ecommerce_transaction
  columns:
  - name: transaction_id
    description: int, primary key representing an ecommerce transaction
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: transaction_data
    description: json, data returned from cybersource when the transaction is fulfilled
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: transaction_amount
    description: numeric, transaction ammount
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: order_id
    description: int, foreign id in the ecommerce_orders tabe for the order associated
      with the transaction
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: transaction_created_on
    description: timestamp, specifying when the transaction was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: transaction_updated_on
    description: timestamp, specifying when the transaction was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: transaction_readable_identifier
    description: string, unique identifier. Either the transaction_id from cybersource
      or a unique uuid
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: transaction_type
    description: string, transaction type, one of "refund" and "payment"
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ["refund", "payment"]
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
- name: stg__mitxonline__app__postgres__ecommerce_line
  description: ""
  columns:
  - name: line_id
    description: int, primary key representing an ecommerce line
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: order_id
    description: int, foreign key in the orders_order table for the order that contains
      the line Currently orders have exactly one line
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: line_created_on
    description: timestamp, specifying when the line was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: line_updated_on
    description: timestamp, specifying when the line was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: product_version_id
    description: int, foreign key in the reversion_version table. Versioned product
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_object_id
    description: int, id for the product object in either the course_courseruns or
      the course_programruns table
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: contenttype_id
    description: int, foreign key in the django_contenttype table, content type of
      the product
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
- name: stg__mitxonline__app__postgres__reversion_revision
  description: This table is used to track changes to products and transactions
  columns:
  - name: revision_id
    description: int, primary key representing a revision of a product or transaction
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: revision_comment
    description: string, automatically generated discription of the change
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: int, foreign key to the users_user record for the user that made
      the change
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: revision_date_created
    description: timestamp, timestamp, specifying when the revision was made
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 4
- name: stg__mitxonline__app__postgres__reversion_version
  description: This table is used to track changes to products and transactions
  columns:
  - name: version_id
    description: int, primary key representing a version of a product or transaction
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: version_object_id
    description: int, foreign key of the object being versioned
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: revision_id
    description: int, primary key in the reversion_revision table
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: contenttype_id
    description: int, foreign key to django_contenttype of the object being versioned
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: version_object_serialized_data
    description: json, serialized data from the object at the time it was versioned
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__ecommerce_order
  columns:
  - name: order_id
    description: int, primary key representing a single MITx Online order
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: order_state
    description: string, order state. Options are "pending", "fulfilled", "canceled"
      "declined", "errored", "refunded", "review", "partially_refunded"
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ["pending", "fulfilled", "canceled", "declined", "errored", "refunded",
          "review", "partially_refunded"]
    - not_null
  - name: order_created_on
    description: timestamp, specifying when the order was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: order_updated_on
    description: timestamp, specifying when the order was updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: order_purchaser_user_id
    description: int, primary key in users_user for the purchaser
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: order_reference_number
    description: string, readable id for the order. Shared with micromasters
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: order_total_price_paid
    description: number, total order amount
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
- name: stg__mitxonline__app__postgres__courses_programrun
  description: ""
  columns:
  - name: programrun_id
    description: int, primary key representing a single MITx Online program run
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - unique
  - name: programrun_tag
    description: str, string that identifies a single run in a prgram E.g. R11
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programrun_start_on
    description: timestamp, specifying when the program run starts
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programrun_end_on
    description: timestamp, specifying when the program run ends
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programrun_updated_on
    description: timestamp, specifying when a program run was last updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programrun_created_on
    description: timestamp, specifying when a program run was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: program_id
    description: int, foreign key to courses_program representing a single MITx Online
      program
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
- name: stg__mitxonline__app__postgres__ecommerce_product
  columns:
  - name: product_id
    description: int, sequential ID for ecommerce product
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: product_price
    description: numeric, the price of the product
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_is_active
    description: boolean, whether the product is visible in the app
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_object_id
    description: int, the course run or program run id in the courses_courserun or
      courses_programrun table
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_created_on
    description: timestamp, the timestamp the product was created
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_updated_on
    description: timestamp, the timestamp the product was last updated
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: product_description
    description: string, the product description, usually the readable_id from the
      courses_course table
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: contenttype_id
    description: int, the id of the product object type in the django_contenttype
      table
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["product_object_id", "contenttype_id"]
      row_condition: "product_is_active"
- name: stg__mitxonline__app__postgres__django_contenttype
  columns:
  - name: contenttype_id
    description: int, sequential ID for the django model
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: contenttype_full_name
    description: string, name for django model. A combination of the models name and
      functional group
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 2
- name: stg__mitxonline__app__postgres__users_user
  columns:
  - name: user_id
    description: int, sequential ID representing one user in MITx Online
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_username
    description: str, name chosen by user
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_email
    description: str, user email associated with their account
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_is_active
    description: boolean, used to soft delete user accounts
  - name: user_full_name
    description: str, the user's full name
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_joined_on
    description: timestamp, specifying when a user account was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: user_last_login
    description: timestamp, specifying when a user last logged in
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 7
- name: stg__mitxonline__app__postgres__users_legaladdress
  columns:
  - name: user_address_id
    description: int, sequential ID
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_address_country
    description: string, user country code
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_id
    description: int, foreign key to users_user
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_last_name
    description: string, user last name
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: user_first_name
    description: string, user first name
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
- name: stg__mitxonline__app__postgres__courses_course
  columns:
  - name: course_id
    description: int, primary key representing a single MITx Online course
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_is_live
    description: boolean, indicating whether course is available to users on MITx
      Online website
  - name: course_title
    description: str, title of the course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_readable_id
    description: str, Open edX ID formatted as course-v1:{org}+{course code}
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_created_on
    description: timestamp, specifying when a course was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: course_updated_on
    description: timestamp, specifying when a course was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 6
- name: stg__mitxonline__app__postgres__courses_program
  columns:
  - name: program_id
    description: int, primary key representing a single MITx Online program
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_is_live
    description: boolean, indicating whether the program is available to users
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: program_title
    description: str, title of the program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_readable_id
    description: str, Open edX ID formatted as program-v1:{org}+{program code}
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_created_on
    description: timestamp, specifying when a program was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: program_updated_on
    description: timestamp, specifying when a program was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 6

- name: stg__mitxonline__app__postgres__courses_programrequirement
  columns:
  - name: programrequirement_id
    description: int, primary key representing a MITx Online program requirement node
    tests:
    - dbt_expectations.expect_column_to_exist
    - unique
    - not_null
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_course')
        field: course_id
  - name: program_id
    description: int, foreign key to courses_program representing a single program
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_program')
        field: program_id
  - name: programrequirement_node_type
    description: str, there are 3 types of nodes that exist in a requirement tree
      - program_root (represent a program) - course (represent a reference to a course)
      - operator (represent a logical operation over a set of courses)
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ["program_root", "course", "operator"]
  - name: programrequirement_path
    description: str, the full materialized path for each node (readonly) e.g. 0001
      is root path, 00010001 is the path to a node in this requirement tree
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programrequirement_depth
    description: int, depth of a node in the tree. A root node has a depth of 1. (readonly)
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programrequirement_numchild
    description: int, the number of children of a node (readonly)
    tests:
    - dbt_expectations.expect_column_to_exist
    - not_null
  - name: programrequirement_title
    description: str, title of the requirement
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programrequirement_operator
    description: str, the logical operation over a set of courses, it can be all_of,
      min_number_of or blank
    tests:
    - dbt_expectations.expect_column_to_exist
    - accepted_values:
        values: ["all_of", "min_number_of"]
  - name: programrequirement_operator_value
    description: str, value of the operator for this requirement e.g. if operator
      is all_of, the corresponding operator_value 3 means all of 3 courses
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 10
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["program_id", "programrequirement_depth"]
      row_condition: "programrequirement_depth=1"

- name: stg__mitxonline__app__postgres__courses_courserun
  columns:
  - name: courserun_id
    description: int, primary key representing a single MITx Online course run
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_is_live
    description: boolean, indicating whether the course run is available to users
      on MITx Online website
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_title
    description: str, title of the course run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_tag
    description: str, string that identifies a single run in a course E.g. 1T2022
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to courses_course representing a single MITx Online
      course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_course')
        field: course_id
  - name: courserun_readable_id
    description: str, Open edX Course ID formatted as course-v1:{org}+{course code}+{run_tag}
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_url
    description: str, url location for the course run in MITx Online
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_is_self_paced
    description: boolean, indicating whether users can take this course at their own
      pace and earn certificate at any time
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_start_on
    description: timestamp, specifying when the course begins
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_end_on
    description: timestamp, specifying when the course ends
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_enrollment_start_on
    description: timestamp, specifying when enrollment starts
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_enrollment_end_on
    description: timestamp, specifying when enrollment ends
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_expired_on
    description: timestamp, specifying the date time beyond which users should not
      see link to this course run on their dashboard
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_upgrade_deadline
    description: timestamp, specifying the date time beyond which users can not enroll
      in paid course mode
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_created_on
    description: timestamp, specifying when a course run was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserun_updated_on
    description: timestamp, specifying when a course run was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 16

- name: stg__mitxonline__app__postgres__courses_coursetopic
  columns:
  - name: coursetopic_id
    description: int, primary key representing a single MITx Online course topic
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: coursetopic_name
    description: str, name of a course topic
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: coursetopic_created_on
    description: timestamp, specifying when a course topic was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: coursetopic_updated_on
    description: timestamp, specifying when a course topic was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 4

- name: stg__mitxonline__app__postgres__courses_course_to_topic
  columns:
  - name: coursetotopic_id
    description: int, primary key representing a single MITx Online course tagged
      to a topic
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: coursetopic_id
    description: int, foreign key to courses_coursetopic representing a single course
      topic
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_coursetopic')
        field: coursetopic_id
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_course')
        field: course_id
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 3
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["coursetopic_id", "course_id"]

- name: stg__mitxonline__app__postgres__courses_blockedcountry
  columns:
  - name: blockedcountry_id
    description: int, primary key for courses_blockedcountry table from MITx Online
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: blockedcountry_code
    description: str, two-letter code of a blocked country for a course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: course_id
    description: int, foreign key to courses_course representing a single course
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_course')
        field: course_id
  - name: blockedcountry_created_on
    description: timestamp, specifying when a blocked country record was initially
      created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: blockedcountry_updated_on
    description: timestamp, specifying when a blocked country record was most recently
      updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 5
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["blockedcountry_code", "course_id"]

- name: stg__mitxonline__app__postgres__courses_courseruncertificate
  columns:
  - name: courseruncertificate_id
    description: int, primary key representing a single MITxOnline course certificate
      record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_courserun')
        field: courserun_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__users_user')
        field: user_id
  - name: certificate_page_revision_id
    description: int, foreign key to wagtailcore_pagerevision (could be blank)
  - name: courseruncertificate_created_on
    description: timestamp, specifying when a certificate was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courseruncertificate_updated_on
    description: timestamp, specifying when a certificate was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courseruncertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]

- name: stg__mitxonline__app__postgres__courses_programcertificate
  columns:
  - name: programcertificate_id
    description: int, primary key representing a single MITxOnline program certificate
      record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: programcertificate_uuid
    description: str, unique identifier for the program certificate
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: program_id
    description: int, foreign key to courses_program representing a single program
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_program')
        field: program_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__users_user')
        field: user_id
  - name: certificate_page_revision_id
    description: int, foreign key to wagtailcore_pagerevision (could be blank)
  - name: programcertificate_created_on
    description: timestamp, specifying when a certificate was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programcertificate_updated_on
    description: timestamp, specifying when a certificate was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: programcertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 8
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "program_id"]

- name: stg__mitxonline__app__postgres__courses_courserungrade
  columns:
  - name: courserungrade_id
    description: int, primary key representing a single MITxOnline grade record
    tests:
    - unique
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserun_id
    description: int, foreign key to courses_courserun representing a single course
      run
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__courses_courserun')
        field: courserun_id
  - name: user_id
    description: str, foreign key to users_user representing a single user
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
    - relationships:
        to: ref('stg__mitxonline__app__postgres__users_user')
        field: user_id
  - name: courserungrade_grade
    description: float, user's grade for the course (range between 0.0 to 1.0)
    tests:
    - not_null
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_letter_grade
    description: str, letter grade defined in the edX grading policy (value may be
      'A', 'B', 'C', 'D', 'Pass', none)
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_is_set_by_admin
    description: boolean, indicating whether this grade is set by a staff user
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_is_passing
    description: boolean, indicating whether the user has passed the minimum passing
      score set for this course
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_created_on
    description: timestamp, specifying when a grade was initially created
    tests:
    - dbt_expectations.expect_column_to_exist
  - name: courserungrade_updated_on
    description: timestamp, specifying when a grade was most recently updated
    tests:
    - dbt_expectations.expect_column_to_exist
  tests:
  - dbt_expectations.expect_table_column_count_to_equal:
      value: 9
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_id", "courserun_id"]
