---
version: 2

models:
- name: marts__combined__users
  description: Mart model for users from different platforms
  columns:
  - name: user_email
    description: string, user email on the corresponding platform including xpro,
      bootcamps, edX.org, or MITx Online. If the user is on edX.org and MITx Online
      then the email will be chosen from the last platform they joined if their account
      is active
    tests:
    - not_null
  - name: user_joined_on
    description: timestamp, user join timestamp on the corresponding platform including
      xpro, bootcamps, edX.org, or MITx Online. If the user is on edX.org and MITx
      Online then the timestamp will be chosen from the latest platform they joined
      if their account is active
  - name: user_last_login
    description: timestamp, user last login on the corresponding platform including
      xpro, bootcamps, edX.org, or MITx Online. If the user is on edX.org and MITx
      Online then the timestamp will be chosen from the latest login if their account
      is active
  - name: user_is_active
    description: boolean, indicating if user's account is active on the corresponding
      platform including xpro, bootcamps, edX.org, or MITx Online. If the user is
      on edX.org and MITx Online then it will be true if their MITx Online account
      is active, otherwise it will default to their edX.org account active status.
  - name: platforms
    description: string, application where the data is from
    tests:
    - not_null
  - name: user_full_name
    description: str, user full name. Very small number of edX.org users have blank
      full name, their name couldn't be populated from other sources if they don't
      have their accounts linked on MicroMasters.
  - name: user_address_country
    description: str, country code provided by the user on the corresponding platform
  - name: user_highest_education
    description: str, user's level of education
  - name: user_gender
    description: str, Gender selected by the user on their profile on the corresponding
      platform
  - name: user_birth_year
    description: int, user's birth year
  - name: user_company
    description: str, user's company
  - name: user_job_title
    description: str, user's job title
  - name: user_industry
    description: str, user's job industry
  - name: user_mitxonline_id
    description: int, user ID on MITxOnline
  - name: user_edxorg_id
    description: int, user ID on edX.org
  - name: user_mitxpro_id
    description: int, user ID on MITxPRO
  - name: user_bootcamps_id
    description: int, user ID on bootcamps
  - name: user_mitxonline_username
    description: string, username on MITxOnline
  - name: user_edxorg_username
    description: string, username on edX.org
  - name: user_mitxpro_username
    description: string, username on MITxPRO
  - name: user_bootcamps_username
    description: string, username on bootcamps
  - name: num_of_course_enrolled
    description: number, the number of courses learner enrolled based on their emails
      so this counts as same person if they use the email to register on different
      platforms
  - name: num_of_course_passed
    description: number, the number of courses learner passed based on their emails
      so this counts as same person if they use the email to register on different
      platforms
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_mitxonline_username", "user_edxorg_username", "user_mitxpro_username",
        "user_bootcamps_username", "platforms"]

- name: marts__combined__orders
  description: B2B and regular orders combined into one table
  columns:
  - name: combined_orders_id
    description: int, primary key for this table. At the grain of order id, line id,
      b2b order id, and platform. If there are any nulls they will be defaulted to
      9. Examples include 495884959191 and 5360536091.
  - name: platform
    description: string, describes platform associated with the order (edX.org, mitxonline,
      mitxpro, or bootcamps).
    tests:
    - not_null
  - name: order_id
    description: int, foreign key for order table. For edX.org, it refers to order
      table in MicroMasters application.
  - name: b2border_id
    description: int, foreign key for b2b order table. This only applies to xPro b2b
      orders everything else will be null.
  - name: line_id
    description: int, foreign key for line table. For edX.org, it refers to line table
      in MicroMasters application.
  - name: coupon_code
    description: string, discount code for the redeemed coupon if applicable
  - name: coupon_id
    description: int, foreign key referencing ecommerce_coupon or the b2b coupon table.
      For edX.org, it refers to ecommerce_coupon table in MicroMasters application.
  - name: coupon_name
    description: string, human readable name for the coupon payment
  - name: coupon_redeemed_on
    description: timestamp, specifying when the coupon was redeemed.
  - name: coupon_type
    description: string, type of the coupon which describes what circumstances the
      coupon can be redeemed.
  - name: courserun_id
    description: int, foreign key in courses_courserun. Null for edX.org.
  - name: courserun_readable_id
    description: string, unique string to identify a course run on the corresponding
      platform.
  - name: discount
    description: str, discount applied for the order in readable format, e.g., $100
      off, 30% off.
  - name: order_created_on
    description: timestamp, specifying when the order was initially created. If this
      is a b2b order it will be the timestamp that order was created otherwise it
      will be when the regular order was created. For edX.org, it is the timestamp
      that order was created in MicroMasters application.
    tests:
    - not_null
  - name: order_reference_number
    description: string, order reference number to identify an order in the corresponding
      application database, e.g., mitxonline-production-20. For edX.org, it refers
      to the order in MicroMasters application.
    tests:
    - not_null
  - name: order_state
    description: string, order state. Options are "cancelled", "created", "declined",
      "errored", "failed", "fulfilled", "refunded", "partially_refunded",  "pending",
      "review".
    tests:
    - not_null
  - name: order_tax_amount
    description: numeric, the amount of tax paid. Only applicable for xPro for now.
  - name: order_tax_country_code
    description: str, the country code where the tax was applied. Only applicable
      for xPro for now.
  - name: order_tax_rate
    description: numeric, the tax rate to apply. Only applicable for xPro for now.
  - name: order_tax_rate_name
    description: string, name of the tax rate assessed. Only applicable for xPro for
      now.
  - name: order_total_price_paid_plus_tax
    description: numeric, total order amount plus the amount of tax paid. For xPro,
      this is calculated order_total_price_paid+order_tax_amount. For other platform,
      this is the same as order_total_price_paid
  - name: order_total_price_paid
    description: number, total order amount
  - name: product_id
    description: int, foreign key for product table
  - name: product_type
    description: string, readable product type
  - name: receipt_authorization_code
    description: str, authorization code from cybersource payment
  - name: receipt_bill_to_address_country
    description: string, address country from cybersource payment
  - name: receipt_bill_to_address_state
    description: string, address state from cybersource payment
  - name: receipt_payment_method
    description: string, payment method from cybersource. Value could be 'paypal'
      or 'card'.
  - name: receipt_transaction_id
    description: string, unique identifier. Either the transaction_id from cybersource
      or a unique uuid
  - name: req_reference_number
    description: str, cybersource req reference number for a payment
  - name: user_email
    description: str, user email associated with their account on the corresponding
      platform
  - name: user_id
    description: int, foreign key to the user table on the corresponding platform
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["order_id", "line_id", "b2border_id", "platform"]

- name: marts__combined_course_enrollment_detail
  description: course enrollment detail with certificates, orders and coupons from
    OL platforms. No order data for edX.org course purchase.
  config:
    grants:
      select: ['finance']
  columns:
  - name: platform
    description: string, application where the data is from
    tests:
    - not_null
    - accepted_values:
        values: '{{ var("platforms") }}'
  - name: courserunenrollment_id
    description: int, internal ID and foreign key to courserunenrollments on the corresponding
      platform. Null for enrollments on edX.org.
  - name: course_readable_id
    description: str, Open edX ID formatted as course-v1:{org}+{course code} for MITx
      Online and xPro courses, and {org}/{course} for edX.org courses. May be null
      for some old edX.org runs and Bootcamps courses. Examples include MITx/6.00.2x
      and course-v1:MITxT+14.740x.
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "platform != 'Bootcamps' and platform != 'edX.org'"
  - name: course_title
    description: str, title of the course. May be null for some old edX.org runs.
    tests:
    - dbt_expectations.expect_column_values_to_not_be_null:
        row_condition: "platform != 'edX.org'"
  - name: coupon_code
    description: str, discount code for the redeemed coupon if applicable
  - name: coupon_redeemed_on
    description: timestamp, specifying when the discount was redeemed by the user
  - name: coupon_type
    description: str, type of the coupon which describes what circumstances the coupon
      can be redeemed.
  - name: courserun_end_on
    description: timestamp, date and time when the course run ends. May be Null.
  - name: courserun_id
    description: int, primary key representing a single course run on the corresponding
      platform. Null for course runs from edx.org
  - name: courserun_is_current
    description: boolean, indicating if the course run is currently running. True
      if courserun_start_on is in the past and blank courserun_end_on, or courserun_start_on
      is in the past and courserun_end_on is in the future.
    tests:
    - not_null
  - name: courserun_readable_id
    description: str, unique string to identify a course run on the corresponding
      platform
  - name: courserun_start_on
    description: timestamp, date and time when the course run starts. May be Null.
  - name: courserun_title
    description: string, title of the course run on the corresponding platform. Maybe
      blank for a few edX.org runs missing in int__edxorg__mitx_courseruns.
  - name: courseruncertificate_created_on
    description: timestamp, date and time when the course certificate was initially
      created
  - name: courseruncertificate_is_earned
    description: boolean, indicating if learner has earned the certificate on mitxonline.mit.edu,
      micromasters.mit.edu (legacy), edX.org or xpro.mit.edu.
    tests:
    - not_null
  - name: courseruncertificate_url
    description: str, URL to the course certificate for users who earned the certificate
      on mitxonline.mit.edu, micromasters.mit.edu (legacy), edX.org or xpro.mit.edu.
      It doesn't include the revoked certificates.
  - name: courseruncertificate_uuid
    description: str, unique identifier for the certificate on the corresponding platform
  - name: courserunenrollment_created_on
    description: timestamp, specifying when the enrollment was initially
    tests:
    - not_null
  - name: courserunenrollment_enrollment_mode
    description: string, enrollment mode for user on the corresponding platform
  - name: courserunenrollment_enrollment_status
    description: string, enrollment status for users whose enrollment changed on the
      corresponding platform
  - name: courserunenrollment_is_active
    description: boolean, indicating whether the enrollment is active
    tests:
    - not_null
  - name: courserunenrollment_is_edx_enrolled
    description: boolean, indicating whether the user is enrolled on edX platform.
      For edx.org course enrollment, it would always be true. Null for Bootcamps as
      it doesn't apply.
  - name: courserungrade_grade
    description: float, course grade on edX.org or MITxOnline or xPro range from 0
      to 1
  - name: courserungrade_is_passing
    description: boolean, indicating whether the user has passed the passing score
      set for this course on edX.org or MITxOnline or xPro
  - name: discount
    description: str, discount in readable format. e.g. $100 off, 30% off, etc
  - name: discount_amount
    description: numeric, actual discount dollar amount. For percent-discount coupon,
      this is calculated as line_price * percentage off
  - name: order_id
    description: int, unique identifier/foreign key to ecommerce orders from the corresponding
      platform. Note that this doesn't include orders from edX.org, which we don't
      have data for them
  - name: order_reference_number
    description: string, order reference number to identify an order on the corresponding
      platform, e.g. mitxonline-production-20
  - name: unit_price
    description: numeric, price for the order line item before discount
  - name: user_company
    description: str, user's company pulled on the platform user enrolled. May be
      blank.
  - name: user_country_code
    description: str, country code on the platform user enrolled. May be blank.
  - name: user_email
    description: string, user email that user registered on the corresponding platform
    tests:
    - not_null
  - name: user_full_name
    description: str, user full name on the platform user enrolled
  - name: user_highest_education
    description: str, user's highest education on the platform user enrolled. May
      be blank.
  - name: user_id
    description: int, user ID on the corresponding platform
    tests:
    - not_null
  - name: user_username
    description: string, username to identify a user on the corresponding platform
    tests:
    - not_null
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["user_username", "courserun_readable_id"]
      row_condition: "platform='edX.org'"
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["courserunenrollment_id"]
      row_condition: "platform ='MITx Online'"
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["courserunenrollment_id"]
      row_condition: "platform ='xPro'"
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["courserunenrollment_id", "order_reference_number"]
      row_condition: "platform='Bootcamps'"

- name: marts__combined_program_enrollment_detail
  description: Mart model for program enrollments and certificates from different
    platforms
  columns:
  - name: platform_name
    description: str, name of the platform
    tests:
    - not_null
  - name: program_id
    description: int, id representing a single program on a particular platform
  - name: program_title
    description: str, title of the program
  - name: program_is_live
    description: boolean, indicating whether the program is available to users on
      the MITxOnline website or MITxPro website
  - name: program_readable_id
    description: str, readable ID from xpro or mitxonline formatted as program-v1:{org}+{program
      code} e.g.program-v1:xPRO+MLx
  - name: user_id
    description: int, unique id assigned to the user
  - name: user_email
    description: string, email
  - name: user_username
    description: string, username
  - name: programenrollment_is_active
    description: boolean, indicating whether the user is still enrolled in the program
  - name: programenrollment_created_on
    description: timestamp, specifying when an enrollment was initially created
  - name: programenrollment_enrollment_status
    description: str, enrollment status for users whose enrollment changed
  - name: programcertificate_created_on
    description: timestamp, specifying when a certificate was initially created
  - name: programcertificate_is_revoked
    description: boolean, indicating whether the certificate is revoked and invalid
  - name: programcertificate_uuid
    description: str, unique identifier for the program certificate
  tests:
  - dbt_expectations.expect_compound_columns_to_be_unique:
      column_list: ["program_title", "user_username", "platform_name", "programenrollment_created_on"]
